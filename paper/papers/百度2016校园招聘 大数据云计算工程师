{"year": "2016", "url": "http://exercise.acmcoder.com/comp_test?paperId=151", "content": [{"answer": "D", "type": "单选", "name": "<p>下面关于垃圾收集的描述哪个是错误的？</p>", "options": [{"option_name": "A", "content": "使用垃圾收集的程序不需要明确释放对象"}, {"option_name": "B", "content": "现代垃圾收集能够处理循环引用问题"}, {"option_name": "C", "content": "垃圾收集能提高程序员效率"}, {"option_name": "D", "content": "使用垃圾收集的语言没有内在泄漏问题"}]}, {"answer": "D", "type": "单选", "name": "<p>下列PHP配置项中，哪一个和安全最不相关:( &nbsp; )&nbsp;</p>", "options": [{"option_name": "A", "content": "open_basedir<br>"}, {"option_name": "B", "content": "register_globals<br>"}, {"option_name": "C", "content": "disable_functions<br>"}, {"option_name": "D", "content": "file_uploads<br>"}]}, {"answer": "A", "type": "单选", "name": "<p>下列SQL语句中，能够实现“收回用户LILEI对职员表（STAFF）中工资（SALARY）的修改权”这一功能的是( &nbsp; &nbsp; &nbsp;)</p>", "options": [{"option_name": "A", "content": "REVOKE UPDATE(SALARY) ON STAFF FROM LILEI "}, {"option_name": "B", "content": "REVOKE UPDATE(SALARY) ON STAFF FROM PUBLIC"}, {"option_name": "C", "content": "REVOKE UPDATE(SALARY) ON TABLE FROM LILEI"}, {"option_name": "D", "content": "REVOKE UPDATE(SALARY) ON TABLE FROM PUBLIC"}]}, {"answer": "CD", "type": "不定项选择", "name": "<p>下面描述中正确的为：</p>", "options": [{"option_name": "A", "content": "线性表的逻辑顺序与物理顺序总是一致的。"}, {"option_name": "B", "content": "线性表的顺序存储表示优于链式存储表示。"}, {"option_name": "C", "content": "线性表若采用链式存储表示时所有结点之间的存储单元地址可连续可不连续。"}, {"option_name": "D", "content": "二维数组是其数组元素为线性表的线性表。"}]}, {"answer": "C", "type": "单选", "name": "<p>以下的命令将在（ &nbsp; &nbsp; &nbsp;）自动执行：06 03 * * 03 lp /usr/local/message | mail -s \"server message\" root</p>", "options": [{"option_name": "A", "content": "每周三06：03分"}, {"option_name": "B", "content": "每周六03：03分"}, {"option_name": "C", "content": "每周三03：06分"}, {"option_name": "D", "content": "每周六03：06分"}]}, {"answer": "C", "type": "单选", "name": "<p>关于ARP表，以下描述中正确的是（ &nbsp; ）</p>", "options": [{"option_name": "A", "content": "用于在各个子网之间进行路由选择<br>"}, {"option_name": "B", "content": "提供常用目标地址的快捷方式来减少网络流量<br>"}, {"option_name": "C", "content": "用于建立IP地址到MAC地址的映射<br>"}, {"option_name": "D", "content": "用于进行应用层信息的转换<br>"}]}, {"answer": "B", "type": "单选", "name": "<p>如下代码输出是？（ &nbsp; &nbsp; ）</p><pre class=\"brush:java;toolbar:false\">class&nbsp;Parent(object):\r\n&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;1\r\n&nbsp;class&nbsp;Child1(Parent):\r\n&nbsp;&nbsp;&nbsp;&nbsp;pass\r\n&nbsp;class&nbsp;Child2(Parent):\r\n&nbsp;&nbsp;&nbsp;&nbsp;pass\r\n&nbsp;print&nbsp;Parent.x,&nbsp;Child1.x,&nbsp;Child2.x\r\nChild1.x&nbsp;=&nbsp;2print&nbsp;Parent.x,&nbsp;Child1.x,&nbsp;Child2.x\r\nParent.x&nbsp;=&nbsp;3print&nbsp;Parent.x,&nbsp;Child1.x,&nbsp;Child2.x</pre><p><br></p>", "options": [{"option_name": "A", "content": "1 2 3<br>1 2 1<br>3 2 1<br>"}, {"option_name": "B", "content": "1 1 1<br>1 2 1<br>3 2 3<br>"}, {"option_name": "C", "content": "1 1 1<br>1 2 1<br>3 2 1<br>"}, {"option_name": "D", "content": "1 1 3<br>1 2 1 <br>3 2 1<br>"}]}, {"answer": "B", "type": "单选", "name": "<pre class=\"brush:cpp;toolbar:false\">#include&lt;iostream&gt;\r\n#include&lt;string&gt;\r\nusing&nbsp;namespace&nbsp;std;\r\nclass&nbsp;A\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;friend&nbsp;long&nbsp;fun(A&nbsp;s)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(s.x&lt;3)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;s.x+fun(A(s.x&nbsp;-&nbsp;1));\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\npublic:\r\n&nbsp;&nbsp;&nbsp;&nbsp;A(long&nbsp;a)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;a--;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\nprivate:\r\n&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;x;\r\n};\r\nint&nbsp;main()\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;sum=0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;for(&nbsp;int&nbsp;i=0;&nbsp;i&lt;5;&nbsp;i++)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum&nbsp;+=&nbsp;fun(A(i));\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;sum;\r\n}</pre><p>代码运行结果是？</p>", "options": [{"option_name": "A", "content": "21"}, {"option_name": "B", "content": "15"}, {"option_name": "C", "content": "9"}, {"option_name": "D", "content": "36"}]}, {"answer": "ABCD", "type": "不定项选择", "name": "<p>以下属于Hash碰撞解决方法的是( &nbsp;)</p>", "options": [{"option_name": "A", "content": "线性探测"}, {"option_name": "B", "content": "二次探测"}, {"option_name": "C", "content": "拉链法"}, {"option_name": "D", "content": "二次散列"}]}, {"answer": "D", "type": "单选", "name": "<p>软件项目存储于/ftproot,允许apache用户修改所有程序,设置访问权限的指令（ &nbsp; &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "chown  apache /ftproot"}, {"option_name": "B", "content": "chmod apache /ftproot"}, {"option_name": "C", "content": "chgrp apache /ftproot"}, {"option_name": "D", "content": "chmod apache -R /ftproot "}]}, {"answer": "B", "type": "单选", "name": "<p>下列有关Socket的说法，错误的是（ &nbsp; ）</p>", "options": [{"option_name": "A", "content": "Socket用于描述IP地址和端口，是一个通信链的句柄<br>"}, {"option_name": "B", "content": "Socket通信必须建立连结<br>"}, {"option_name": "C", "content": "Socket客户端的端口是不固定的<br>"}, {"option_name": "D", "content": "Socket服务端的端口是固定的<br>"}]}, {"answer": "ABCE", "type": "不定项选择", "name": "<p>以下哪些进程状态转换是正确的</p>", "options": [{"option_name": "A", "content": "就绪到运行"}, {"option_name": "B", "content": "运行到就绪"}, {"option_name": "C", "content": "运行到阻塞"}, {"option_name": "D", "content": "阻塞到运行"}, {"option_name": "E", "content": "阻塞到就绪"}]}, {"answer": "BCD", "type": "不定项选择", "name": "<p>下列哪些函数的返回类型是属于windows内核对象( &nbsp;)</p>", "options": [{"option_name": "A", "content": "CreatePen"}, {"option_name": "B", "content": "CreateEvent"}, {"option_name": "C", "content": "CreateFile"}, {"option_name": "D", "content": "CreateSemaphore"}]}, {"answer": "D", "type": "单选", "name": "<p>强制卸载已安装软件需要的参数（&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ）</p>", "options": [{"option_name": "A", "content": "rpm -o --nodeps"}, {"option_name": "B", "content": "rpm -I --oldpack"}, {"option_name": "C", "content": "rpm -u --nodeps"}, {"option_name": "D", "content": "rpm -e --nodeps"}]}, {"answer": "AB", "type": "不定项选择", "name": "<p>数据库设计里，视图（View)可以使得我们为一个或多个数据表定义一个特殊的表现形式，视图在行为上与数据表没啥特别区别，可以使用基本的select,insert,update等命令修改数据，但对于update操作，也有一些限制，下面那些是受限的原因（）</p>", "options": [{"option_name": "A", "content": "初始View定义的Select语句里如果包含了GROUP BY,DISTINCT,LIMIT或HAVING等命令时"}, {"option_name": "B", "content": "如果视图里数据来自多张字表时"}, {"option_name": "C", "content": "如果视图里缺少主键索引，唯一索引，外键约束条件锁涉及的全部数据列时"}, {"option_name": "D", "content": "当Creat View之后又使用Replace View对已存在视图做了更名操作后"}]}], "company": "百度", "name": "百度2016校园招聘 大数据云计算工程师", "id": "151"}