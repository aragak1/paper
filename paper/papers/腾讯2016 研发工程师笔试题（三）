{"year": "2016", "url": "http://exercise.acmcoder.com/comp_test?paperId=125", "content": [{"answer": "C", "type": "单选", "name": "<p>下面关于ICMP协议的描述中，正确的是（）</p>", "options": [{"option_name": "A", "content": "ICMP协议根据MAC地址查找对应的IP地址"}, {"option_name": "B", "content": "ICMP协议把公网的IP地址转换为私网的IP地址"}, {"option_name": "C", "content": "ICMP协议用于控制数据报传送中的差错情况"}, {"option_name": "D", "content": "ICMP协议集中管理网络中的IP地址分配"}]}, {"answer": "C", "type": "单选", "name": "<p>以下不属于tcp连接断开的状态是？</p>", "options": [{"option_name": "A", "content": "TIME_WAIT"}, {"option_name": "B", "content": "FIN_WAIT_1"}, {"option_name": "C", "content": "SYNC_SENT"}, {"option_name": "D", "content": "FIN_WAIT_2"}]}, {"answer": "D", "type": "单选", "name": "<p>win32系统里，下面几个sizeof的运行结果是（）</p>", "options": [{"option_name": "A", "content": "a=1,b=1,c=1"}, {"option_name": "B", "content": "a=4,b=4,c=4"}, {"option_name": "C", "content": "a=4,b=7,c=4"}, {"option_name": "D", "content": "a=4,b=8,c=4"}]}, {"answer": "D", "type": "单选", "name": "<p>在动态分区分配方案中，某一作业完成后，系统收回其主存空间，并与相邻空闲区合并，为此需要修改空闲区表，造成空闲区数减1的情况是()</p>", "options": [{"option_name": "A", "content": "无上邻空闲区，也无下邻空闲区"}, {"option_name": "B", "content": "有上邻空闲区，但无下邻空闲区"}, {"option_name": "C", "content": "有下邻空闲区，但无下邻空闲区"}, {"option_name": "D", "content": "有上邻空闲区，也有下邻空闲区"}]}, {"answer": "D", "type": "单选", "name": "<p>在正方体上任取三个顶点连成三角形，则所得的三角形是直角非等腰三角形的概率为？</p>", "options": [{"option_name": "A", "content": "0.0714285714285714"}, {"option_name": "B", "content": "0.571428571428571"}, {"option_name": "C", "content": "0.285714285714286"}, {"option_name": "D", "content": "0.428571428571429"}]}, {"answer": "B", "type": "单选", "name": "<p>在linux编程中，以下哪个TCP的套接字选项与nagle算法的开启和关闭有关？</p>", "options": [{"option_name": "A", "content": "TCP_MAXSEG"}, {"option_name": "B", "content": "TCP_NODELAY"}, {"option_name": "C", "content": "TCP_SYNCNT"}, {"option_name": "D", "content": "TCP_KEEPALIVE"}]}, {"answer": "A", "type": "单选", "name": "<p>某二叉树的先根遍历序列和后根遍历序列正好相反，则该二叉树具有的特征是()</p>", "options": [{"option_name": "A", "content": "高度等于其结点数"}, {"option_name": "B", "content": "任一结点无左孩子"}, {"option_name": "C", "content": "任一结点无右孩子"}, {"option_name": "D", "content": "空或只有一个结点"}]}, {"answer": "ABC", "type": "不定项选择", "name": "<p>关于epoll和select的区别，哪些说法是正确的？</p>", "options": [{"option_name": "A", "content": "epoll和select都是I/O多路复用的技术，都可以实现同时监听多个I/O事件的状态"}, {"option_name": "B", "content": "epoll相比select效率更高，主要是基于其操作系统支持的I/O事件通知机制，而select是基于轮询机制"}, {"option_name": "C", "content": "epoll支持水平触发和边沿触发两种模式"}, {"option_name": "D", "content": "select能并行支持I/O比较小，且无法修改"}]}, {"answer": "ABC", "type": "不定项选择", "name": "<p>下面哪些特性可能导致代码体积膨胀:</p>", "options": [{"option_name": "A", "content": "宏定义"}, {"option_name": "B", "content": "模板"}, {"option_name": "C", "content": "内联函数"}, {"option_name": "D", "content": "递归"}]}, {"answer": "B", "type": "单选", "name": "<pre class=\"brush:cpp;toolbar:false\">如下代码，result变量的输出结果是多少？\r\n#include&lt;iostream&gt;\r\nusing&nbsp;namespace&nbsp;std;\r\nint&nbsp;i=1;\r\nclass&nbsp;MyCls{\r\npublic:\r\n&nbsp;&nbsp;&nbsp;&nbsp;MyCls():m_nFor(m_nThd),m_nSec(i++),m_nFir(i++),m_nThd(i++){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_nThd=i;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;echo(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;\"result:\"&lt;&lt;m_nFir+m_nSec+m_nThd+m_nFor&lt;&lt;endl;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\nprivate:\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;m_nFir;\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;m_nSec;\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;m_nThd;\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;&amp;m_nFor;\r\n};\r\nint&nbsp;main()\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;MyCls&nbsp;oCls;\r\n&nbsp;&nbsp;&nbsp;&nbsp;oCls.echo();\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0;\r\n}</pre><p><br></p>", "options": [{"option_name": "A", "content": "10"}, {"option_name": "B", "content": "11"}, {"option_name": "C", "content": "9"}, {"option_name": "D", "content": "12"}, {"option_name": "E", "content": "8"}]}, {"answer": "A", "type": "单选", "name": "<p>对于移动平均算法，是计算某变量之前n个数值的算术平均，正确的说法是：</p>", "options": [{"option_name": "A", "content": "空间复杂度是O(l)"}, {"option_name": "B", "content": "空间复杂度是O(n)"}, {"option_name": "C", "content": "空间复杂度是O(logn)"}, {"option_name": "D", "content": "空间复杂度是O(nlogn)"}]}, {"answer": "DE", "type": "不定项选择", "name": "<p>某一速率为100M的交换机有20个端口，其一个端口上连着一台笔记本电脑，此电脑从迅雷上下载一部1G的电影需要的时间可能是多久？</p>", "options": [{"option_name": "A", "content": "10S"}, {"option_name": "B", "content": "20S"}, {"option_name": "C", "content": "40S"}, {"option_name": "D", "content": "100S"}, {"option_name": "E", "content": "200S"}]}, {"answer": "E", "type": "单选", "name": "<p>22.在一个单CPU的处理机中，有P1，P3，P5三个作业，有两个IO设备IO1，IO2，并且能够实现抢先式多任务并行工作的多道程序环境中，投入运行优先级由高到低P5，P1，P3三个作业，他们使用设备的先后顺序和占用设备的时间分别为：P1:IO2(10ms) CPU(10ms) IO1(30ms）CPU(10ms)P3:IO1(30ms) CPU(10ms) IO2(30ms）CPU(10ms)P5:CPU(20ms) IO1(30ms) CPU(10ms) IO2(15ms）忽略其他的时间损耗，3个作业投入到全部完成的情况下。请问下列哪些选项为IO2的设备利用率？</p>", "options": [{"option_name": "A", "content": "0.55"}, {"option_name": "B", "content": "0.26"}, {"option_name": "C", "content": "0.48"}, {"option_name": "D", "content": "0.5"}, {"option_name": "E", "content": "0.39"}]}, {"answer": "D", "type": "单选", "name": "<p>C语言里i=5,j=7,请问i|j等于多少？</p>", "options": [{"option_name": "A", "content": "1"}, {"option_name": "B", "content": "3"}, {"option_name": "C", "content": "5"}, {"option_name": "D", "content": "7"}]}, {"answer": "A", "type": "单选", "name": "<p>有一个如下的结构体：</p><p>struct A{</p><p>&nbsp;long a1;</p><p>&nbsp;short a2;</p><p>&nbsp;int a3;</p><p>&nbsp;int *a4;</p><p>};</p><p>请问在64位编译器下用sizeof(struct A)计算出的大小是多少？</p><p><br></p>", "options": [{"option_name": "A", "content": "24"}, {"option_name": "B", "content": "28"}, {"option_name": "C", "content": "16"}, {"option_name": "D", "content": "18"}]}, {"answer": "AC", "type": "不定项选择", "name": "<pre class=\"brush:cpp;toolbar:false\">请问下列代码的输出结果有可能是哪些（）？\r\n#include&lt;stdint.h&gt;\r\n#include&lt;stdio.h&gt;\r\nunion&nbsp;X\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;int32_t&nbsp;a;\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int16_t&nbsp;b;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int16_t&nbsp;c;\r\n&nbsp;&nbsp;&nbsp;&nbsp;};\r\n};\r\nint&nbsp;main(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;x;\r\n&nbsp;&nbsp;&nbsp;&nbsp;x.a=0x20150810;\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(\"%x,%x\\\\n\",x.b,x.c);\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0;\r\n}</pre><p><br></p>", "options": [{"option_name": "A", "content": "2015810"}, {"option_name": "B", "content": "50810201"}, {"option_name": "C", "content": "8102015"}, {"option_name": "D", "content": "20150810"}]}, {"answer": "ABCD", "type": "不定项选择", "name": "<p>Internet的网络层含有的协议是？</p>", "options": [{"option_name": "A", "content": "IP"}, {"option_name": "B", "content": "ICMP"}, {"option_name": "C", "content": "ARP"}, {"option_name": "D", "content": "RARP"}]}, {"answer": "ABD", "type": "不定项选择", "name": "<p>以下涉及到内存管理的代码段中，有错误的是：</p>", "options": [{"option_name": "A", "content": "int *a=new int(12);//..... free(a);"}, {"option_name": "B", "content": "int *ip=static_cast<int*>(malloc(sizeof(int)));*ip=10;//.....delete ip;"}, {"option_name": "C", "content": "double *a=new double[1];//.... delete a;"}, {"option_name": "D", "content": "<p>int *ip=new int(12);</p><p>for(int i=0;i<12;++i){</p><p>ip[i]=i;</p><p>}</p><p>delete []ip;</p>"}]}, {"answer": "C", "type": "单选", "name": "<p>客户端C和服务器S之间建立一个TCP连接，该连接总是以1KB的最大段长发送TCP段，客户端C有足够的数据要发送。当拥塞窗口为16KB的时候发生超时，如果接下来的4个RTT往返时间内的TCP段的传输是成功的，那么当第4个RTT时间内发送的所有TCP段都得到了ACK时，拥塞窗口大小是：</p>", "options": [{"option_name": "A", "content": "7KB"}, {"option_name": "B", "content": "8KB"}, {"option_name": "C", "content": "9KB"}, {"option_name": "D", "content": "16KB"}]}, {"answer": "D", "type": "单选", "name": "<p>我们常说的mvc框架是指的什么的?</p>", "options": [{"option_name": "A", "content": "模块(module)-视图(view)-组件(component)"}, {"option_name": "B", "content": "模型(model)-视图(view)-组件(component)"}, {"option_name": "C", "content": "模块(module)-视图(view)-控制器(controller)"}, {"option_name": "D", "content": "模型(model)-视图(view)-控制器(controller)"}]}, {"answer": "B", "type": "单选", "name": "<p>若系统中有五台打印机，有多个进程均需要使用两台，规定每个进程一次仅允许申请一台，则在不发生死锁的情况下至多允许______个进程参与竞争</p>", "options": [{"option_name": "A", "content": "5"}, {"option_name": "B", "content": "4"}, {"option_name": "C", "content": "3"}, {"option_name": "D", "content": "2"}]}, {"answer": "B", "type": "单选", "name": "<p>已知关系R（F,G,H,I,J）及其上的函数相关性集合，F=(F-&gt;G,J-&gt;F,HJ-&gt;I),该关系的候选关键字是：</p>", "options": [{"option_name": "A", "content": "FJ"}, {"option_name": "B", "content": "HJ"}, {"option_name": "C", "content": "HI"}, {"option_name": "D", "content": "IJ"}]}, {"answer": "CD", "type": "不定项选择", "name": "<p>以下是C++的不同数据类型值的比较语句，请问这些判断语句中作为条件部分的语句编写有问题的有:</p>", "options": [{"option_name": "A", "content": "如果变量bVar是布尔类型：if(false==bVar){doSomeThing();}"}, {"option_name": "B", "content": "如果变量nVar是int型：if(0==nVar){doSomeThing();}"}, {"option_name": "C", "content": "如果变量fVar为浮点型:if(0.02=fVar){doSomeThing();}"}, {"option_name": "D", "content": "如果变量sVar为字符串型：if（\"\"==sVar){doSomeThing();}"}]}, {"answer": "D", "type": "单选", "name": "<p>关于红黑树和AVL树，以下哪种说法不正确？</p>", "options": [{"option_name": "A", "content": "两者都属于自平衡二叉树"}, {"option_name": "B", "content": "两者查找,插入，删除的时间复杂度相同"}, {"option_name": "C", "content": "包含n个内部节点的红黑树的高度是O(log(n))"}, {"option_name": "D", "content": "JDK的TreeMap是一个AVL的实现"}]}, {"answer": "A", "type": "单选", "name": "<p>以下哪个是由权值集合(16,8,4,2)构造的哈夫曼树(最优二叉树):</p>", "options": [{"option_name": "A", "content": "<img src=\"http://bj.bcebos.com/v1/acmcoder/1039218138737543.png?authorization=bce-auth-v1%2F02fe1db0eea94e8480054b43acd6124f%2F2016-07-06T06%3A17%3A50Z%2F-1%2F%2Fc170cf2f08ac9c47303c054c1b8d7ea48a3e9775fc9799f0c29fa9968fbf1043\" title=\"\" alt=\"\">"}, {"option_name": "B", "content": "<img src=\"http://bj.bcebos.com/v1/acmcoder/1039282239823199.png?authorization=bce-auth-v1%2F02fe1db0eea94e8480054b43acd6124f%2F2016-07-06T06%3A18%3A54Z%2F-1%2F%2F03b81b1bd44787b144153c6169cac90f502822eae064adca6e995723c39a180c\" title=\"\" alt=\"\">"}, {"option_name": "C", "content": "<img src=\"http://bj.bcebos.com/v1/acmcoder/1039290047125831.png?authorization=bce-auth-v1%2F02fe1db0eea94e8480054b43acd6124f%2F2016-07-06T06%3A19%3A02Z%2F-1%2F%2Fca0e5cdcdcff7a9a77459435768793e4b494657ce370dd2c8a66319c3ca35a1d\" title=\"\" alt=\"\">"}, {"option_name": "D", "content": "<img src=\"http://bj.bcebos.com/v1/acmcoder/1039298000247286.png?authorization=bce-auth-v1%2F02fe1db0eea94e8480054b43acd6124f%2F2016-07-06T06%3A19%3A10Z%2F-1%2F%2Fe6800f9c8bae587a9c91d3486cfa7b851400efe4f232278b1404c288a75d6369\" title=\"\" alt=\"\">"}]}, {"answer": "B", "type": "单选", "name": "<p>对某二叉树进行先序遍历的结果是ABDEFC，中序遍历的结果是DBFEAC，则后序遍历的结果是（）</p>", "options": [{"option_name": "A", "content": "DBFEAC"}, {"option_name": "B", "content": "DFEBCA"}, {"option_name": "C", "content": "BDFECA"}, {"option_name": "D", "content": "BDEFAC"}]}, {"answer": "CD", "type": "不定项选择", "name": "<p>TCP链接中主动断开链接netstat观察可能出现的状态流转是：</p>", "options": [{"option_name": "A", "content": "ESTABLISHED->CLOSE_WAIT->TIME_WAIT->CLOSED"}, {"option_name": "B", "content": "ESTABLISHED->TIME_WAIT->CLOSE_WAIT->CLOSED"}, {"option_name": "C", "content": "ESTABLISHED->FIN_WAIT_1->FIN_WAIT_2->TIME_WAIT->CLOSED"}, {"option_name": "D", "content": "ESTABLISHED->FIN_WAIT_1->TIME_WAIT->CLOSED"}]}], "company": "腾讯", "name": "腾讯2016 研发工程师笔试题（三）", "id": "125"}