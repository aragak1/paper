{"year": "2016", "year": "2016", "url": "http://exercise.acmcoder.com/comp_test?paperId=79", "content": [{"answer": "E", "type": "单选", "name": "<p>下面是折半查找的实现，data是按升序排列的数据，x是查找下标，y是查找的上标，<br>v是查找的数值，返回v在data的索引，若没找到返回-1。代码不正确是____。<br></p><pre class=\"brush:cpp;toolbar:false\">public&nbsp;int&nbsp;bsearch(int[]&nbsp;data,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;v)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;m;\r\n&nbsp;&nbsp;&nbsp;&nbsp;while(x&lt;y){&nbsp;//1\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m&nbsp;=&nbsp;x&nbsp;+&nbsp;(y-x)/2;&nbsp;//2\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(data[m]&nbsp;==&nbsp;v)&nbsp;return&nbsp;m;&nbsp;//3\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if(data[m]&nbsp;&gt;&nbsp;v)&nbsp;y&nbsp;=&nbsp;m;&nbsp;//4\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;x&nbsp;=&nbsp;m;&nbsp;//5\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;-1;&nbsp;//6\r\n}</pre><p><br></p>", "options": [{"option_name": "A", "content": "1<br>"}, {"option_name": "B", "content": "2<br>"}, {"option_name": "C", "content": "3<br>"}, {"option_name": "D", "content": "4<br>"}, {"option_name": "E", "content": "5<br>"}, {"option_name": "F", "content": "6<br>"}]}, {"answer": "B", "type": "单选", "name": "<p>以下程序输出结果是____。<br></p><pre class=\"brush:cpp;toolbar:false\">class&nbsp;A\r\n{\r\npublic:\r\n&nbsp;&nbsp;&nbsp;&nbsp;virtual&nbsp;void&nbsp;func(int&nbsp;val&nbsp;=&nbsp;1)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;std::cout&lt;&lt;\"a-&gt;\"&lt;&lt;val&nbsp;&lt;&lt;std::endl;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;virtual&nbsp;void&nbsp;test()\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;func();}\r\n};\r\nclass&nbsp;B&nbsp;:&nbsp;public&nbsp;A\r\n{\r\npublic:\r\n&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;func(int&nbsp;val=0)\r\n{std::cout&lt;&lt;\"b-&gt;\"&lt;&lt;val&nbsp;&lt;&lt;std::endl;}\r\n};\r\nint&nbsp;main(int&nbsp;argc&nbsp;,char*&nbsp;argv[])\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;B*p&nbsp;=&nbsp;new&nbsp;B;\r\n&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;test();\r\nreturn&nbsp;0;\r\n}</pre><p><!--\"b---><!--\"a---><br></p>", "options": [{"option_name": "A", "content": "A->0<br>"}, {"option_name": "B", "content": "B->1<br>"}, {"option_name": "C", "content": "A->1<br>"}, {"option_name": "D", "content": "B->0<br>"}, {"option_name": "E", "content": "编译出错<br>"}, {"option_name": "F", "content": "以上都不对<br>"}]}, {"answer": "A", "type": "单选", "name": "<p>在1,2,3,......,999,1000中，有____个数各位数之和模10等于0。</p>", "options": [{"option_name": "A", "content": "99<br>"}, {"option_name": "B", "content": "100<br>"}, {"option_name": "C", "content": "101<br>"}, {"option_name": "D", "content": "150<br>"}, {"option_name": "E", "content": "200<br>"}, {"option_name": "F", "content": "201<br>"}]}, {"answer": "C", "type": "单选", "name": "<p>将整数数组（7-6-3-5-4-1-2）按照堆排序的方式原地进行升序排列，请问在第一轮排序结束之后，数组的顺序是_____。</p>", "options": [{"option_name": "A", "content": "2-6-3-5-4-1-7<br>"}, {"option_name": "B", "content": "6-2-3-5-4-1-7<br>"}, {"option_name": "C", "content": "6-5-3-2-4-1-7<br>"}, {"option_name": "D", "content": "1-5-3-2-4-6-7<br>"}, {"option_name": "E", "content": "5-4-3-2-1-6-7<br>"}, {"option_name": "F", "content": "5-1-3-2-4-6-7<br>"}]}, {"answer": "B", "type": "单选", "name": "<p>商品推荐场景中过于聚焦的商品推荐往往会损害用户的购物体验，在有些场景中，系统会通过一定程度的随机性给用户带来发现的惊喜感。假设在某推荐场景中，经计算A和B两个商品与当前访问用户的匹配度分别为0.8和0.2分，系统将随机为A生成一个均匀分布于0到0.8的最终得分，为B生成一个均匀分布于0到0.2的最终得分，那么最终B的分数大于A的分数的概率为_____。</p>", "options": [{"option_name": "A", "content": "0.0625"}, {"option_name": "B", "content": "0.125<br>"}, {"option_name": "C", "content": "0.1875<br>"}, {"option_name": "D", "content": "0.375<br>"}, {"option_name": "E", "content": "0.25"}, {"option_name": "F", "content": "1/3<br>"}]}, {"answer": "D", "type": "单选", "name": "<p>函数func的定义如下：<br>void func(const int&amp; v1, cont int&amp; v2)<br>{<br>&nbsp;&nbsp;&nbsp; std::cout &lt;&lt; v1 &lt;&lt; ' ';<br>&nbsp;&nbsp;&nbsp; std::cout &lt;&lt; v2 &lt;&lt; ' ';<br>}<br>在Visual Studio开发环境下， 以下代码输出结果为____。<br>int main (int argc, char* argv[])<br>{<br>&nbsp;&nbsp;&nbsp; int i=0;<br>&nbsp;&nbsp;&nbsp; func(++i,i++);<br>&nbsp;&nbsp;&nbsp; return 0;<br>}</p>", "options": [{"option_name": "A", "content": "0 1<br>"}, {"option_name": "B", "content": "1 2<br>"}, {"option_name": "C", "content": "2 1<br>"}, {"option_name": "D", "content": "2 0<br>"}, {"option_name": "E", "content": "0 2<br>"}, {"option_name": "F", "content": "1 0<br>"}]}, {"answer": "E", "type": "单选", "name": "<p>假设基准值为数组首元素的快速排序，要使得数组满足非降序排列，下列数据分布导致快排算法效率最低的是____。</p>", "options": [{"option_name": "A", "content": "2-6-3-7-5-1-4<br>"}, {"option_name": "B", "content": "6-2-3-5-4-1-7<br>"}, {"option_name": "C", "content": "7-5-3-2-4-1-6<br>"}, {"option_name": "D", "content": "1-5-7-2-4-6-3<br>"}, {"option_name": "E", "content": "1-2-3-4-5-6-7<br>"}, {"option_name": "F", "content": "4-1-3-7-5-6-2<br>"}]}, {"answer": "B", "type": "单选", "name": "<p>将森林转换为对应的二叉树，若在二叉树结点中，结点m是结点n的双亲结点的双亲结点，则在原来的森林中，m和n可能具有的关系是____。<br>1.父子关系 <br>2.m的双亲结点与n的双亲结点是兄弟关系 <br>3.兄弟关系</p>", "options": [{"option_name": "A", "content": "只有3<br>"}, {"option_name": "B", "content": "1和3<br>"}, {"option_name": "C", "content": "1和2<br>"}, {"option_name": "D", "content": "1、2和3<br>"}, {"option_name": "E", "content": "只有1<br>"}, {"option_name": "F", "content": "只有2<br>"}]}, {"answer": "A", "type": "单选", "name": "<p>下面线程间的通讯机制中，关键路径上不会产生系统调用从而减少用户态到内核态的上下文切换的是____。</p>", "options": [{"option_name": "A", "content": "pthread_spin_lock<br>"}, {"option_name": "B", "content": "pthread_mutex<br>"}, {"option_name": "C", "content": "信号量<br>"}, {"option_name": "D", "content": "pthread_rwlock<br>"}, {"option_name": "E", "content": "管道<br>"}, {"option_name": "F", "content": "消息队列<br>"}]}, {"answer": "C", "type": "单选", "name": "<p>如果下列的公式成立：84*148=B6A8。则采用的是____进制表示的<br></p>", "options": [{"option_name": "A", "content": "15<br>"}, {"option_name": "B", "content": "11<br>"}, {"option_name": "C", "content": "12<br>"}, {"option_name": "D", "content": "14<br>"}, {"option_name": "E", "content": "16<br>"}, {"option_name": "F", "content": "以上都不对<br>"}]}, {"answer": "C", "type": "单选", "name": "<p>从1,2,3,4...8,9里任意选择一部分数(至少1个),能得到多少种不同的乘积</p>", "options": [{"option_name": "A", "content": "144<br>"}, {"option_name": "B", "content": "148<br>"}, {"option_name": "C", "content": "152<br>"}, {"option_name": "D", "content": "156<br>"}, {"option_name": "E", "content": "160<br>"}, {"option_name": "F", "content": "164<br>"}]}, {"answer": "D", "type": "单选", "name": "<p>两人在一个n个点的无向完全图上进行游戏，每次可以选择当前图中两个端点度数奇偶性相同的边删除，谁不能操作谁输，则在n=1,2,3,......,9,10中，有____个图先手有必胜策略。</p>", "options": [{"option_name": "A", "content": "2<br>"}, {"option_name": "B", "content": "3<br>"}, {"option_name": "C", "content": "4<br>"}, {"option_name": "D", "content": "5<br>"}, {"option_name": "E", "content": "6<br>"}, {"option_name": "F", "content": "7<br>"}]}, {"answer": "E", "type": "单选", "name": "<p>一人以d元在淘宝买入n套《三体》，d为正整数，其中两套他以成本一半送给朋友，余下的每套高于原价8元卖出，加上送给朋友的两套，如果全部利润是72元，那么n最小可能是____。</p>", "options": [{"option_name": "A", "content": "18<br>"}, {"option_name": "B", "content": "17<br>"}, {"option_name": "C", "content": "15<br>"}, {"option_name": "D", "content": "13<br>"}, {"option_name": "E", "content": "12<br>"}, {"option_name": "F", "content": "10<br>"}]}, {"answer": "A", "type": "单选", "name": "<p>有一个类B继承自类A，他们数据成员如下：<br>class A {<br>...<br>private：<br>&nbsp;&nbsp; int &amp;a;<br>};<br>class B : public A {<br>...<br>private:<br>&nbsp;&nbsp;&nbsp;&nbsp; int a;<br>public:<br>&nbsp;&nbsp;&nbsp;&nbsp; const int b;<br>&nbsp;&nbsp;&nbsp;&nbsp; A c;<br>&nbsp;&nbsp;&nbsp;&nbsp; static const char* d;<br>&nbsp;&nbsp;&nbsp;&nbsp; A* e;<br>};<br>则构造函数中，成员变量一定要通过初始化列表来初始化的是____。</p>", "options": [{"option_name": "A", "content": "b c<br>"}, {"option_name": "B", "content": "b c e<br>"}, {"option_name": "C", "content": "b c d e<br>"}, {"option_name": "D", "content": "c e<br>"}, {"option_name": "E", "content": "b d<br>"}, {"option_name": "F", "content": "b e<br>"}]}, {"answer": "D", "type": "单选", "name": "<p>关于线程和进程，不正确的描述是____。</p>", "options": [{"option_name": "A", "content": "进程的隔离性要好于线程<br>"}, {"option_name": "B", "content": "线程在资源消耗上通常要比进程轻量<br>"}, {"option_name": "C", "content": "不同进程间不会共享逻辑地址空间<br>"}, {"option_name": "D", "content": "同一个进程的线程之间共享内存，包括堆和栈<br>"}, {"option_name": "E", "content": "进程间有途径共享大量内存中的数据<br>"}, {"option_name": "F", "content": "线程间通讯可以通过直接访问全局变量，或者使用进程间通讯的机制(IPC)"}]}, {"answer": "F", "type": "单选", "name": "<p>有甲、乙、丙三位员工分别负责前端、后端、数据、算法、测试、运维。每人负责两项。已知：数据和前端住在一起 甲是三人中最年轻的 前端和丙有空一起下棋 后端比算法年长，又比乙年轻 三人中最年长的住得最远 那么，三人分别负责____。</p>", "options": [{"option_name": "A", "content": "甲-前端&测试；乙-算法&运维；丙-后端&数据<br>"}, {"option_name": "B", "content": "甲-后端&算法；乙-前端&运维；丙-测试&数据<br>"}, {"option_name": "C", "content": "甲-前端&运维；乙-测试&算法；丙-后端&数据<br>"}, {"option_name": "D", "content": "甲-算法&数据；乙-测试&前端；丙-后端&运维<br>"}, {"option_name": "E", "content": "甲-前端&算法；乙-后端&运维；丙-测试&数据<br>"}, {"option_name": "F", "content": "甲-前端&算法；乙-测试&运维；丙-后端&数据<br>"}]}, {"answer": "D", "type": "单选", "name": "<p>进程P1和P2，资源A和B，进程对资源的操作定义如下：读取资源A：rA读取资源B：rB写入资源A：wA写入资源B：wB同时规定，进程读取某一资源前，必须加上共享锁，写入某一资源前必须加上排他锁；资源在被进程加共享锁时，可以被其他进程继续加共享锁，但不能加排他锁；资源在被进程加排他锁时，其他进程无法加锁。进程完成全部操作后释放锁。进程P1和进程P2并发执行，如下哪种运行序列可能会出现死锁_____。</p>", "options": [{"option_name": "A", "content": "P1(rA->rB), P2(rA->wB)<br>"}, {"option_name": "B", "content": "P1(rA->rB), P2(wA->rB)<br>"}, {"option_name": "C", "content": "P1(wB->rA), P2(rA->rB)<br>"}, {"option_name": "D", "content": "P1(wB->rA), P2(wA->rB)<br>"}, {"option_name": "E", "content": "P1(wA->wB), P2(wA->wB)<br>"}, {"option_name": "F", "content": "P1(wA->rB), P2(wA->wB)<br>"}]}, {"answer": "D", "type": "单选", "name": "<p>如果我国希望在３０年后实现经济翻翻，并且假设我国经济增长速度每年都保持相同，那么至少需要每年保持____增长速度才可实现目标。</p>", "options": [{"option_name": "A", "content": "1.5%<br>"}, {"option_name": "B", "content": "1.8%<br>"}, {"option_name": "C", "content": "2%<br>"}, {"option_name": "D", "content": "2.4%<br>"}, {"option_name": "E", "content": "3.3%<br>"}, {"option_name": "F", "content": "7%<br>"}]}, {"answer": "C", "type": "单选", "name": "<p>二进制值0.00110011001100110011001100110011 转换成10进制后最接近____。</p>", "options": [{"option_name": "A", "content": "0.1<br>"}, {"option_name": "B", "content": "0.15<br>"}, {"option_name": "C", "content": "0.2<br>"}, {"option_name": "D", "content": "0.22<br>"}, {"option_name": "E", "content": "0.25<br>"}, {"option_name": "F", "content": "0.3<br>"}]}, {"answer": "A", "type": "单选", "name": "<p>有一个程序中有A,B,C三个线程同时对一个文件进行读写操作，其中的A,B是写进程只负责往里面写数据，C是读线程，同时把读取的数据从文件中删除，A线程单独写满文件需要10个小时，B单独写程序需要6小时，C线程需要15小时才能读取完整个文件，不考虑三个线程之间的相互影响的情况下现在____小时才能写满文件</p>", "options": [{"option_name": "A", "content": "5<br>"}, {"option_name": "B", "content": "6<br>"}, {"option_name": "C", "content": "5.5<br>"}, {"option_name": "D", "content": "4.5<br>"}, {"option_name": "E", "content": "4.8<br>"}, {"option_name": "F", "content": "5.3<br>"}]}], "company": "阿里巴巴", "name": "阿里巴巴2016校园招聘 研发工程师（三）", "id": "79"}