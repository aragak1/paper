{"url": "http://exercise.acmcoder.com/comp_test?paperId=162", "content": [{"answer": "ABCD", "type": "不定项选择", "name": "<p>为了提高数据库的性能，需要针对系统设计基准测试进行压力测试，那么进行压力测试时需要考虑以下哪些指标（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "可扩展性"}, {"option_name": "B", "content": "响应时间"}, {"option_name": "C", "content": "并发性"}, {"option_name": "D", "content": "吞吐量"}]}, {"answer": "CD", "type": "不定项选择", "name": "<p>对下列常见的各种网络术语描述正确的是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "ADNS是一种用于TCP/IP应用程序的分布式数据库，因此它在TCP/IP体系中处于应用层"}, {"option_name": "B", "content": "TFTP是一种文件传递应用程序，它使用的传输层协议是TCP"}, {"option_name": "C", "content": "Ping是对两个TCP/IP系统连通性进行测试的基本工具，它利用ICMP进行基本的请求的应答"}, {"option_name": "D", "content": "Telnet 是标准的提供远程登录功能的应用，可以在不同OS系统的主机之间运行"}]}, {"answer": "C", "type": "单选", "name": "<pre class=\"brush:cpp;toolbar:false\">void&nbsp;func(char&nbsp;*p)\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;p=p+1;\r\n}\r\nint&nbsp;main()\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;s[]={'1','2','3','4'};\r\n&nbsp;&nbsp;&nbsp;&nbsp;func(s);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(\"%c\",*s);\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0;\r\n}</pre><p>以下程序执行后的输出结果为（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "2"}, {"option_name": "B", "content": "编译错误"}, {"option_name": "C", "content": "1"}, {"option_name": "D", "content": "无法确定"}]}, {"answer": "D", "type": "单选", "name": "<p>以下字符串定义与赋值中，正确的是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "char s[80] = {\"A\", \"B\" ,\"C\"}"}, {"option_name": "B", "content": "char s[80]; s = {´A´, ´B´,´C´}"}, {"option_name": "C", "content": "char s[80]; s = \"ABC\";"}, {"option_name": "D", "content": "char s[80] =\"ABC\";"}]}, {"answer": "AC", "type": "不定项选择", "name": "<p>在MySQL中，下列关于触发机器的描述正确的是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "MySQL的触发器只支持行级出发，不支持语句级触发"}, {"option_name": "B", "content": "触发器可以调用将数据返回客户端的存储程序"}, {"option_name": "C", "content": "在MySQL中，使用new和old引用触发器中发生的记录内容"}, {"option_name": "D", "content": "在触发器中可以使用显示或者隐式方式开始或结束事务的语句"}]}, {"answer": "D", "type": "单选", "name": "<p>通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应的位置并插入的排序算法是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "归并排序"}, {"option_name": "B", "content": "选择排序"}, {"option_name": "C", "content": "希尔排序"}, {"option_name": "D", "content": "插入排序"}]}, {"answer": "A", "type": "单选", "name": "<pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;Test{\r\n&nbsp;&nbsp;&nbsp;&nbsp;static&nbsp;int&nbsp;cnt&nbsp;=&nbsp;6;\r\n&nbsp;&nbsp;&nbsp;&nbsp;static{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnt&nbsp;+=&nbsp;9;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\npublic&nbsp;static&nbsp;void&nbsp;main(string[]&nbsp;args）{\r\n&nbsp;&nbsp;&nbsp;&nbsp;System.out.println（“cnt&nbsp;=”&nbsp;+&nbsp;cnt);\r\n}\r\nstatic{\r\n&nbsp;&nbsp;&nbsp;&nbsp;Cnt&nbsp;/=3;\r\n&nbsp;&nbsp;&nbsp;&nbsp;};\r\n}</pre><p>Cnt的值是</p>", "options": [{"option_name": "A", "content": "Cnt=5"}, {"option_name": "B", "content": "Cnt=2"}, {"option_name": "C", "content": "Cnt=3"}, {"option_name": "D", "content": "Cnt=6"}]}, {"answer": "BC", "type": "不定项选择", "name": "<p>在java中重写方法应遵循规则的包括（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "访问修饰符的限制一定要大于被重写方法的访问修饰符"}, {"option_name": "B", "content": "可以有不同的访问修饰符"}, {"option_name": "C", "content": "参数列表必须完全与被重写的方法相同"}, {"option_name": "D", "content": "必须具有不同的参数列表"}]}, {"answer": "CD", "type": "不定项选择", "name": "<p>下列有关java构造跟使用叙述正确的是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "构造器的返回值为vold类型"}, {"option_name": "B", "content": "如果一个源文件中有多个类，那么构造器必须与公共类同名"}, {"option_name": "C", "content": "构造器可以有0个，1个或一个以上的参数"}, {"option_name": "D", "content": "每个类可以有一个以上的构造器"}]}, {"answer": "D", "type": "单选", "name": "<p>下面关于promise的说法中，错误的是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "resolve（    ）和reject都是直接生成一个进入相应状态的promise对象，其参数就是进入相应状态时传递过去的参数，可以在完成回调的参数中得到"}, {"option_name": "B", "content": "Promise.resolve（value），Promise.reject（reason）是Promise构造器上还直接提供了一组静态方法"}, {"option_name": "C", "content": "在调用then方法或者catch方法时都是异步进行的，但是执行速度比较快"}, {"option_name": "D", "content": "Promise构造器的prototype上还有两个方法，分别是then和catch。这两个方法的参数也是回调函数，这些函数会在Promise实例进入不同状态后被调用。Then对应到resolve，catch对应到reject"}]}, {"answer": "B", "type": "单选", "name": "<p>设有定义char *p[]={\"Shanghai\",\"Beijing\",\"Honkong\"};则结果为j字符的表达式是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "*p[1] +3"}, {"option_name": "B", "content": "*(p[1] +3)"}, {"option_name": "C", "content": "*(p[3] +1)"}, {"option_name": "D", "content": "p[3] [1]"}]}, {"answer": "D", "type": "单选", "name": "<p>网络地址为172.16.0.0，采用子网掩码255.255.224.0 .以下说法正确的是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "其中一个子网的广播地址为：172.16.32.255"}, {"option_name": "B", "content": "其中一个子网的广播地址为：172.16.128.255"}, {"option_name": "C", "content": "划分了8个有效子网"}, {"option_name": "D", "content": "划分了6个有效子网"}]}, {"answer": "D", "type": "单选", "name": "<p>下列有关this指针使用方法的叙述正确的是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "保证基类保护成员在子类中可以被访问"}, {"option_name": "B", "content": "保证基类私有成员在子类中可以被访问"}, {"option_name": "C", "content": "保证基类共有成员在子类中可以被访问"}, {"option_name": "D", "content": "保证每个对象拥有自己的数据成员，但共享处理这些数据的代码"}]}, {"answer": "AC", "type": "不定项选择", "name": "<p>假如在MySQL中有存储过程proc1（员工编号，月份）用来查询员工的工资，两个参数类型均为字符类型，则下列调用存储过程的方法正确的是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "call Proc1（‘emp001’  ,’ 201601’ );"}, {"option_name": "B", "content": "exec Proc1（‘emp001’  ,’ 201601’ );"}, {"option_name": "C", "content": "call Proc1（‘emp001’  ,null);"}, {"option_name": "D", "content": "call Proc1（‘emp001’  ,);"}]}, {"answer": "CD", "type": "不定项选择", "name": "<p>以下集合对象中哪几个是线程安全的（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "LinkedList"}, {"option_name": "B", "content": "ArrayList"}, {"option_name": "C", "content": "Vector"}, {"option_name": "D", "content": "Hashtable"}]}, {"answer": "C", "type": "单选", "name": "<pre class=\"brush:python;toolbar:false\">b&nbsp;=&nbsp;2*a/&nbsp;4\r\na&nbsp;=&nbsp;\"one\"\r\nprint(a,b)</pre><p>执行下列语句后的显示结果是什么（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "10"}, {"option_name": "B", "content": "one0.5"}, {"option_name": "C", "content": "error"}, {"option_name": "D", "content": "one 0"}]}, {"answer": "A", "type": "单选", "name": "<p>Linux中包括两种链接：硬链接（Hard Link）和软连接（Soft Link），下列说法正确的是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "软连接可以跨文件系统进行连接，硬链接不可以"}, {"option_name": "B", "content": "当删除原文件的时候硬链接文件仍然存在，且内容不变"}, {"option_name": "C", "content": "硬链接被删除，磁盘上的数据文件会同时被删除"}, {"option_name": "D", "content": "硬链接会重新建立一个inode，软链接不会"}]}, {"answer": "AC", "type": "不定项选择", "name": "<p>算法的时间复杂度取决于（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "待处理数据的状态"}, {"option_name": "B", "content": "处理器的速度"}, {"option_name": "C", "content": "问题的规模"}, {"option_name": "D", "content": "程序所占空间"}]}, {"answer": "AD", "type": "不定项选择", "name": "<pre class=\"brush:python;toolbar:false\">1.bit&nbsp;=&nbsp;input(\"Enter&nbsp;a&nbsp;binary&nbsp;digit:\")\r\n2.if&nbsp;bit&nbsp;=&nbsp;0&nbsp;or&nbsp;1:\r\n3.&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;\"your&nbsp;input&nbsp;is\"&nbsp;,bit\r\n4.else\r\n5.&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;\"your&nbsp;input&nbsp;is&nbsp;invalid\"</pre><p>以上程序要求用户输入二进制数字0/1并显示之，请指出程序中的错误：（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "4"}, {"option_name": "B", "content": "5"}, {"option_name": "C", "content": "3"}, {"option_name": "D", "content": "2"}]}, {"answer": "B", "type": "单选", "name": "<p>KMP算法下，长为n的字符串中匹配长度为m的子串的复杂度为（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "O（N）"}, {"option_name": "B", "content": "O（M+N）"}, {"option_name": "C", "content": "O（M+LOGM）"}, {"option_name": "D", "content": "O（N+LOGM）"}]}, {"answer": "BC", "type": "不定项选择", "name": "<p>对于工资表结构如下（员工编号，姓名，部门，工资），如果要对查询的结果按照部门升序与工资降序进行排序，则下列排序正确的是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "order by部门，工资"}, {"option_name": "B", "content": "order by部门，工资desc"}, {"option_name": "C", "content": "order by部门 asc，工资desc"}, {"option_name": "D", "content": "order by部门desc，工资desc"}]}, {"answer": "AD", "type": "不定项选择", "name": "<p>有关操作系统常用调度算法叙述正确的是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "FCFS调度算法不利于短作业"}, {"option_name": "B", "content": "SPF调度算法不利于短作业"}, {"option_name": "C", "content": "HRN调度算法不利于长作业"}, {"option_name": "D", "content": "HRN调度算法既利于短作业又有利于长作业"}]}, {"answer": "A", "type": "单选", "name": "<p>设顺序循环队列Q[0: M-1]的头指针和尾指针分别为F和R.头指针F总是指向队头元素的前一位置.尾指针R总是指向队尾元素的当前位置.则该循环队列中的元素个数为（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "（R-F+M)%M"}, {"option_name": "B", "content": "R-F"}, {"option_name": "C", "content": "(F-R+M)%M"}, {"option_name": "D", "content": "F-R"}]}, {"answer": "AB", "type": "不定项选择", "name": "<p>为了提高数据的查询效率，需要在数据库中建立索引，则下列设计索引的原则描述正确的是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "在频繁进行排序或分组（即进行group by 或order by操作）的列上建立索引"}, {"option_name": "B", "content": "考虑列中指的分布，列的基数越大，索引的效果越好"}, {"option_name": "C", "content": "在select关键字后选择列表的列上，建立索引"}, {"option_name": "D", "content": "在表中，索引越多越好"}]}, {"answer": "C", "type": "单选", "name": "<p>设哈夫曼树中的结点总数为49，若用二叉链表作为存储结构，则该哈夫曼树中总共有多少个空指针域（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "51"}, {"option_name": "B", "content": "52"}, {"option_name": "C", "content": "50"}, {"option_name": "D", "content": "49"}]}, {"answer": "B", "type": "单选", "name": "<p>利用时间重叠概念实行并行处理的是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "多处理机"}, {"option_name": "B", "content": "流水处理机"}, {"option_name": "C", "content": "相联处理机"}, {"option_name": "D", "content": "并行（阵列）处理机"}]}, {"answer": "A", "type": "单选", "name": "<p>关于中间件特点的描述.不正确的是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "中间件运行于客户机/服务器的操作系统内核中，提高内核运行效率"}, {"option_name": "B", "content": "中间件应支持标准的协议和接口"}, {"option_name": "C", "content": "中间件可运行于多种硬件和操作系统平台上"}, {"option_name": "D", "content": "跨越网络,硬件，操作系统平台的应用或服务可通过中间件透明交互"}]}, {"answer": "ACD", "type": "不定项选择", "name": "<p>下列关于策略处理规则描述正确的是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "如果子容器的某个策略被配置，则此配置值会覆盖由其父容器所传递下来的配置值"}, {"option_name": "B", "content": "当组策略的用户配置和计算机配置冲突的时候，优先处理用户配置"}, {"option_name": "C", "content": "组策略的配置值是有累加性的"}, {"option_name": "D", "content": "系统是先处理计算机配置，再处理用户配置"}]}, {"answer": "C", "type": "单选", "name": "<pre class=\"brush:cpp;toolbar:false\">int&nbsp;f(int&nbsp;x)\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;((x&gt;2)&nbsp;?&nbsp;x*f(x-1)&nbsp;:&nbsp;3);\r\n}\r\nint&nbsp;i;\r\nI=f(f(2)):</pre><p>执行如上函数后. I的值为（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "30"}, {"option_name": "B", "content": "无限递归"}, {"option_name": "C", "content": "9"}, {"option_name": "D", "content": "2160"}]}, {"answer": "A", "type": "单选", "name": "<p>执行chmod 644 mm.txt后的权限是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "-rw-r--r--"}, {"option_name": "B", "content": "rw-r--r--"}, {"option_name": "C", "content": "-rwxr--r--"}, {"option_name": "D", "content": "rwxr- -rw-"}]}, {"answer": "ACD", "type": "不定项选择", "name": "<p>promise的状态有（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "Unfulfilled"}, {"option_name": "B", "content": "Pause"}, {"option_name": "C", "content": "Resolved"}, {"option_name": "D", "content": "Rejected"}]}, {"answer": "D", "type": "单选", "name": "<p>下面的哪个选项是自底向上分析方法（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "递归下降分析法"}, {"option_name": "B", "content": "预测分析法"}, {"option_name": "C", "content": "LL（ 1）分析法"}, {"option_name": "D", "content": "算符优先分析法"}]}, {"answer": "CD", "type": "不定项选择", "name": "<p>有关曼彻斯特编码叙述正确的是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "在信号位开始时不改变信号极性，表示辑”1”"}, {"option_name": "B", "content": "模拟数据转换为数字信号"}, {"option_name": "C", "content": "在信号位中电平从高到低跳变表示0"}, {"option_name": "D", "content": "数字数据转换为数字信号"}]}, {"answer": "ABD", "type": "不定项选择", "name": "<p>下列说法正确的是（ &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "二维以上的数组其实是一种特殊的广义表"}, {"option_name": "B", "content": "数组一旦建立，结构的元素个数和元素间的关系就不再变化"}, {"option_name": "C", "content": "数组是一种线性结构，因此只能用来存储线性表"}, {"option_name": "D", "content": "数组采用顺序存储方式表示"}]}], "company": "蘑菇街", "name": "蘑菇街2017校园招聘 笔试题", "id": "162"}