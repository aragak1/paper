{"year": "2016", "url": "http://exercise.acmcoder.com/comp_test?paperId=103", "content": [{"answer": "A", "type": "单选", "name": "<pre class=\"brush:cpp;toolbar:false\">#include&lt;iostream.h&gt;\r\nusing&nbsp;namespace&nbsp;std;\r\nclass&nbsp;parent\r\n{&nbsp;&nbsp;&nbsp;int&nbsp;i;\r\n&nbsp;&nbsp;protected:\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;x;\r\n&nbsp;&nbsp;public:\r\n&nbsp;&nbsp;&nbsp;&nbsp;parent(&nbsp;)&nbsp;{x=0;&nbsp;i=0;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;change(&nbsp;)&nbsp;{x++;&nbsp;i++;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;display();\r\n};\r\nclass&nbsp;son:&nbsp;public&nbsp;parent\r\n{&nbsp;public:\r\n&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;modify();\r\n};\r\nvoid&nbsp;parent::&nbsp;display()&nbsp;&nbsp;&nbsp;{cout&lt;&lt;\"x=\"&lt;&lt;x&lt;&lt;endl;&nbsp;}\r\nvoid&nbsp;son::modify()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{x++;&nbsp;}\r\nint&nbsp;main()\r\n{&nbsp;son&nbsp;A;&nbsp;&nbsp;&nbsp;parent&nbsp;B;\r\n&nbsp;A.display();&nbsp;&nbsp;&nbsp;\r\n&nbsp;A.change();\r\n&nbsp;A.modify();&nbsp;\r\n&nbsp;A.display();&nbsp;&nbsp;&nbsp;\r\n&nbsp;B.change();&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;B.display();&nbsp;}</pre><p>运行时的输出结果是<br></p>", "options": [{"option_name": "A", "content": "x=0<br>x=2<br>x=1"}, {"option_name": "B", "content": "x=0<br>x=1<br>x=2<br>"}, {"option_name": "C", "content": "x=1<br>x=0<br>x=2<br>"}, {"option_name": "D", "content": "<p>x=2</p><p>x=0</p><p>x=1</p>"}]}, {"answer": "B", "type": "单选", "name": "<p>在无噪声情况下，若某通信链路的带宽为 3kHz，采用 4 个相位，每个相位具有 4</p><p>种振幅的 QAM 调制技术，则该通信链路的最大数据传输速率是（ &nbsp; &nbsp; &nbsp;）</p><p><br></p>", "options": [{"option_name": "A", "content": "12kbit/s"}, {"option_name": "B", "content": "24kbit/s"}, {"option_name": "C", "content": "48kbit/s"}, {"option_name": "D", "content": "96kbit/s"}]}, {"answer": "B", "type": "单选", "name": "<p>vsftpd配置本地用户传输速率的参数( &nbsp; &nbsp; &nbsp;)</p>", "options": [{"option_name": "A", "content": "max_user"}, {"option_name": "B", "content": "local_max_rate"}, {"option_name": "C", "content": "anon_max_rate"}, {"option_name": "D", "content": "user_max_rate"}]}, {"answer": "A", "type": "单选", "name": "<pre class=\"brush:cpp;toolbar:false\">#include&nbsp;&lt;iostream&gt;\r\nusing&nbsp;namespace&nbsp;std;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\ntemplate&nbsp;&lt;typename&nbsp;T&gt;\r\nclass&nbsp;Data{\r\npublic:\r\nData(T&nbsp;v)&nbsp;{&nbsp;val=v;&nbsp;}\r\nT&nbsp;get(T&nbsp;v)&nbsp;{&nbsp;return&nbsp;v*val;&nbsp;}\r\nprivate:\r\nT&nbsp;val;};\r\nint&nbsp;&nbsp;main()\r\n{Data_______A(5);\r\ncout&lt;&lt;A.get(10);return&nbsp;0;}</pre><p>请选择程序中横线处的缺失部分,使得程序运行结果为50.<br></p>", "options": [{"option_name": "A", "content": "< int ><int></int>"}, {"option_name": "B", "content": "(int)"}, {"option_name": "C", "content": "<5>"}, {"option_name": "D", "content": "-5"}]}, {"answer": "C", "type": "单选", "name": "<p>SQL中关于视图操作，错误的说法是（ &nbsp; &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "更新视图包括插入、删除、修改三类操作"}, {"option_name": "B", "content": "安全起见，更新视图时需要在定义视图时增加with check option 子句"}, {"option_name": "C", "content": "视图是实际数据库实体"}, {"option_name": "D", "content": "视图多用于查询"}]}, {"answer": "C", "type": "单选", "name": "<p>设一个系统中有5个进程，它们的到达时间和服务时间如下，A的到达时间为 0，服务时间为3；B的到达时间为 2，服务时间为6；C的到达时间为 4，服务时间为4；D的到达时间为 6，服务时间为5；E的到达时间为 8，服务时间为2.忽略I/O以及其他开销时间，若分别按先来先服务（FCFS）进行CPU调度，其平均周转时间为（ &nbsp; &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "4.5"}, {"option_name": "B", "content": "6.4"}, {"option_name": "C", "content": "8.6"}, {"option_name": "D", "content": "10.2"}]}, {"answer": "C", "type": "单选", "name": "<p>以下的命令将在（ &nbsp; &nbsp; &nbsp;）自动执行：06 03 * * 03 lp /usr/local/message | mail -s \"server message\" root</p>", "options": [{"option_name": "A", "content": "每周三06：03分"}, {"option_name": "B", "content": "每周六03：03分"}, {"option_name": "C", "content": "每周三03：06分"}, {"option_name": "D", "content": "每周六03：06分"}]}, {"answer": "C", "type": "单选", "name": "<p>数据链路层采用后退 N 帧（GBN）协议，发送方已经发送了编号为 0～7 的帧。当</p><p>计时器超时时，若发送方只收到 0、2、3 号帧的确认，则发送方需要重发的帧数是（ &nbsp; &nbsp; &nbsp;）&nbsp;</p><p><br></p>", "options": [{"option_name": "A", "content": "2"}, {"option_name": "B", "content": "3"}, {"option_name": "C", "content": "4"}, {"option_name": "D", "content": "5"}]}, {"answer": "C", "type": "单选", "name": "<p>关系模式R（a，b，c，d）中关系代数表达式σ3&lt;‘4’（R）等价于SQL语句（ &nbsp; &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "select * from R where d<3"}, {"option_name": "B", "content": "select * from R where "}, {"option_name": "C", "content": "select c from R where c<4"}, {"option_name": "D", "content": "select c,d from R having d<2"}]}, {"answer": "D", "type": "单选", "name": "<p>软件项目存储于/ftproot,允许apache用户修改所有程序,设置访问权限的指令（ &nbsp; &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "chown  apache /ftproot"}, {"option_name": "B", "content": "chmod apache /ftproot"}, {"option_name": "C", "content": "chgrp apache /ftproot"}, {"option_name": "D", "content": "chmod apache -R /ftproot "}]}, {"answer": "B", "type": "单选", "name": "<p>采用开放定址法处理散列表的冲突时，其平均查找长度（ &nbsp; &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "低于链接法处理冲突"}, {"option_name": "B", "content": "高于链接法处理冲突"}, {"option_name": "C", "content": "低于二分查找"}, {"option_name": "D", "content": "高于二分查找"}]}, {"answer": "B", "type": "单选", "name": "<p>如果系统中就绪队列中进程的个数为10个，则系统至少有（ &nbsp; &nbsp; &nbsp;）个进程</p>", "options": [{"option_name": "A", "content": "9"}, {"option_name": "B", "content": "11"}, {"option_name": "C", "content": "1"}, {"option_name": "D", "content": "10"}]}, {"answer": "A", "type": "单选", "name": "<p>设有6个结点的无向图，该图至少应有（ &nbsp; &nbsp; &nbsp;）条边才能确保是一个连通图</p>", "options": [{"option_name": "A", "content": "5"}, {"option_name": "B", "content": "6"}, {"option_name": "C", "content": "7"}, {"option_name": "D", "content": "8"}]}, {"answer": "D", "type": "单选", "name": "<p>对于双向循环链表，每个结点有两个指针域next和prior，分别指向前驱和后继。在p指针所指向的结点之后插入s指针所指结点的操作应为（ &nbsp; &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "p->next = s; s->prior = p; p->next->prior = s; s->next = p->next;"}, {"option_name": "B", "content": "p->next = s; p->next->prior = s; s->prior = p; s->next = p->next;"}, {"option_name": "C", "content": "s->prior = p; s->next = p->next; p->next = s; p->next->prior = s;"}, {"option_name": "D", "content": "s->prior = p; s->next = p->next; p->next->prior = s; p->next = s;"}]}, {"answer": "C", "type": "单选", "name": "<p>下面叙述不正确的是（ &nbsp; &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "C++通过虚函数实现多态"}, {"option_name": "B", "content": "对基类成员的访问必须是无二义性的"}, {"option_name": "C", "content": "赋值兼容规则也适用于多重继承的组合"}, {"option_name": "D", "content": "基类的公有成员在派生类中仍然是公有的"}]}], "company": "百度", "name": "百度2016校园招聘 软件研发工程师", "id": "103"}