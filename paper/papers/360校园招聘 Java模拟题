{"url": "http://exercise.acmcoder.com/comp_test?paperId=126", "content": [{"answer": "A", "type": "单选", "name": "<p>写出下面代码的运行结果<br></p><pre class=\"brush:js;toolbar:false\">var&nbsp;a,b;\r\n(function(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;alert(a);\r\n&nbsp;&nbsp;&nbsp;&nbsp;alert(b);\r\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;a=b=3;\r\n&nbsp;&nbsp;&nbsp;&nbsp;alert(a);\r\n&nbsp;&nbsp;&nbsp;&nbsp;alert(b);\r\n})();\r\nalert(a);\r\nalert(b);</pre><p><br></p>", "options": [{"option_name": "A", "content": "undefined，undefined，3,3，undefined，3"}, {"option_name": "B", "content": "undefined，undefined，3,3，undefined，undefined"}, {"option_name": "C", "content": "0，0，3,3，undefined，undefined"}, {"option_name": "D", "content": "undefined，undefined，3,3，0，0"}]}, {"answer": "D", "type": "单选", "name": "<p>下列事件哪个不是由鼠标触发的事件（）</p>", "options": [{"option_name": "A", "content": "click"}, {"option_name": "B", "content": "contextmenu"}, {"option_name": "C", "content": "mouseout"}, {"option_name": "D", "content": "keydown"}]}, {"answer": "C", "type": "单选", "name": "<p>某一系统功能,需要一次性加载N(N在1000左右)个随机数,后续只对该集合进行遍历.最宜采用哪种结构存放？</p>", "options": [{"option_name": "A", "content": "Hash表"}, {"option_name": "B", "content": "二叉树"}, {"option_name": "C", "content": "链表"}, {"option_name": "D", "content": "图"}]}, {"answer": "AB", "type": "多选", "name": "<p>精俭排序，即一对数字不进行两次和两次以上的比较，以下是“精俭排序”的是</p>", "options": [{"option_name": "A", "content": "插入排序"}, {"option_name": "B", "content": "归并排序"}, {"option_name": "C", "content": "选择排序"}, {"option_name": "D", "content": "堆排序"}]}, {"answer": "A", "type": "单选", "name": "<p>angularjs1使用了mvc进行web开发，其中控制层一般用什么语言来定义</p>", "options": [{"option_name": "A", "content": "javascript"}, {"option_name": "B", "content": "html"}, {"option_name": "C", "content": "css"}, {"option_name": "D", "content": "jquery"}]}, {"answer": "C", "type": "单选", "name": "<p>下面不是面向对象的基本原则的是？</p>", "options": [{"option_name": "A", "content": "单一职责原则（Single-Resposibility Principle）"}, {"option_name": "B", "content": "开放封闭原则（Open-Closed principle）"}, {"option_name": "C", "content": "抽象类原则（Abstract-Class principle）"}, {"option_name": "D", "content": "依赖倒置原则（Dependecy-Inversion Principle）"}]}, {"answer": "A", "type": "单选", "name": "<p>在jquery中，如果想要获取当前窗口的宽度值，下面哪个是实现该功能的？</p>", "options": [{"option_name": "A", "content": "width()"}, {"option_name": "B", "content": "width(val)"}, {"option_name": "C", "content": "width"}, {"option_name": "D", "content": "innerWidth()"}]}, {"answer": "D", "type": "单选", "name": "<p>C# 或是 Java 程序段的结果： int[][] array = new int[3][]{ new int[3]{5,6,2}, new int[5]{6,9,7,8,3}, new int[2]{3,2} }; array[2][2] 返回（）</p>", "options": [{"option_name": "A", "content": "9"}, {"option_name": "B", "content": "6"}, {"option_name": "C", "content": "2"}, {"option_name": "D", "content": "溢出"}]}, {"answer": "ABD", "type": "多选", "name": "<p>在下列表述中,( &nbsp; )是错误的</p>", "options": [{"option_name": "A", "content": "含有一个或多个空格字符的串称为空串"}, {"option_name": "B", "content": "对n(n>0)个顶点的网,求出权最小的n-1条边便可构成其最小生成树"}, {"option_name": "C", "content": "选择排序算法是不稳定的"}, {"option_name": "D", "content": "平衡二叉树的左右子树的结点数之差的绝对值不超过1"}]}, {"answer": "C", "type": "单选", "name": "<p>如下代码输出的结果是什么：<br></p><pre class=\"brush:js;toolbar:false\">console.log(1+&nbsp;\"2\"+\"2\");\r\nconsole.log(1+&nbsp;+\"2\"+\"2\");\r\nconsole.log(\"A\"-&nbsp;\"B\"+\"2\");\r\nconsole.log(\"A\"-&nbsp;\"B\"+2);</pre><p><br></p>", "options": [{"option_name": "A", "content": "122<br>122<br>NaN<br>NaN"}, {"option_name": "B", "content": "122<br>32<br>NaN<br>NaN2"}, {"option_name": "C", "content": "122<br>32<br>NaN2<br>NaN"}, {"option_name": "D", "content": "122<br>32<br>NaN2<br>NaN2"}]}, {"answer": "A", "type": "单选", "name": "<p>NSTimer *myTimer = [NSTimer timerWithTimeInterval:1.0 target:self selector:@selector(doSomeThing:) userInfo:nil repeats:YES];&nbsp;</p><p>[myTimer fire]</p><p><br></p>", "options": [{"option_name": "A", "content": "没有将timer加入runloop"}, {"option_name": "B", "content": "doSomeThing缺少参数"}, {"option_name": "C", "content": "忘记传递数据给userInfo"}, {"option_name": "D", "content": "myTimer对象未通过[[myTimer alloc] init]方法初始化"}]}, {"answer": "A", "type": "单选", "name": "<p>接口是一种引用类型，在接口中可以声明（ ），但不可以声明公有的域或私有的成员变量。</p>", "options": [{"option_name": "A", "content": "方法、属性、索引器和事件"}, {"option_name": "B", "content": "方法、属性信息、属性"}, {"option_name": "C", "content": "索引器和字段"}, {"option_name": "D", "content": "事件和字段"}]}, {"answer": "B", "type": "单选", "name": "<p>需要删除arr数组中的第i个元素，最好的做法是？</p>", "options": [{"option_name": "A", "content": "<p>for(var i=0,n=0;i<this.length;i++){　　　　< p=\"\"></this.length;i++){　　　　<></p><p>                if(this[i]!=this[dx]){　　　　　</p><p>                   this[n++]=this[i]　　　　</p><p>                }　　</p><p>}</p><p><br></p>"}, {"option_name": "B", "content": "arr.splice(i-1,1)"}, {"option_name": "C", "content": "arr.slice(0,n).concat(arr.slice(n+1,arr.length));"}, {"option_name": "D", "content": "Array.prototype.remove=function(dx){<br>  if(isNaN(dx)||dx>this.length){<br>  return false<br>  }<br>}<this.length;i++){ this.length-=\"1　}<br\"></this.length;i++){>"}]}, {"answer": "AD", "type": "多选", "name": "<p>如果在一个排序算法的执行过程中，没有一对元素被比较过两次或以上，则称该排序算法为节俭排序算法，以下算法中是节俭排序算法的有________。</p>", "options": [{"option_name": "A", "content": "插入排序"}, {"option_name": "B", "content": "选择排序"}, {"option_name": "C", "content": "堆排序"}, {"option_name": "D", "content": "归并排序"}]}, {"answer": "B", "type": "单选", "name": "<p>flash和js通过什么类如何交互?</p>", "options": [{"option_name": "A", "content": "ExtensionContex"}, {"option_name": "B", "content": "ExternalInterface"}, {"option_name": "C", "content": "IInterpolator"}, {"option_name": "D", "content": "FlexContentHolder"}]}, {"answer": "C", "type": "单选", "name": "<p>下面不属于ajax事件的是？</p>", "options": [{"option_name": "A", "content": "ajaxComplete(callback)"}, {"option_name": "B", "content": "ajaxSuccess(callback)"}, {"option_name": "C", "content": "$.post(url)"}, {"option_name": "D", "content": "ajaxSend(callback)"}]}, {"answer": "B", "type": "单选", "name": "<p>用有向无环图描述表达式(A+B)*((A+B)/A),至少需要顶点的数目为()</p>", "options": [{"option_name": "A", "content": "8"}, {"option_name": "B", "content": "5"}, {"option_name": "C", "content": "6"}, {"option_name": "D", "content": "9"}]}, {"answer": "A", "type": "单选", "name": "<p>设一个链表最常用的操作是在末尾插入结点和删除尾结点,则选用()最节省时间</p>", "options": [{"option_name": "A", "content": "带头结点的双循环链表"}, {"option_name": "B", "content": "单循环链表"}, {"option_name": "C", "content": "带尾指针的单循环链表"}, {"option_name": "D", "content": "单链表"}]}, {"answer": "D", "type": "单选", "name": "<p>设有一组记录的关键字为{19,14,23,1,68,20,84,27,55,11,10,79},用链地址法构造哈希表,哈希函数为H(key)=key MOD 13,哈希地址为1的链中有()个记录</p>", "options": [{"option_name": "A", "content": "1"}, {"option_name": "B", "content": "2"}, {"option_name": "C", "content": "3"}, {"option_name": "D", "content": "4"}]}, {"answer": "AB", "type": "不定项选择", "name": "<p>如何规避javascript多人开发函数重名问题。</p>", "options": [{"option_name": "A", "content": "根据不同的开发人员实现的功能，在函数名加前缀"}, {"option_name": "B", "content": "每个开发人员都把自己的函数封装到类中，然后调用的时候即使函数名相同，但是因为是要类.函数名来调用，所以也减少了重复的可能性"}, {"option_name": "C", "content": "以上都不正确"}]}], "company": "360", "name": "360校园招聘 Java模拟题", "id": "126", "year": "2016"}