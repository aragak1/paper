{"url": "http://exercise.acmcoder.com/comp_test?paperId=149", "content": [{"answer": "A", "type": "单选", "name": "<p>一个全局变量tally,两个线程并发执行(代码段都是ThreadProc),问两个线程都结束后,tally取值范围为（ &nbsp; ）<br></p><pre class=\"brush:java;toolbar:false\">int&nbsp;tally=0;//全局变量\r\n&nbsp;&nbsp;void&nbsp;ThreadProc(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;i=1;i&lt;=50;i++)\r\n&nbsp;&nbsp;tally+=1;\r\n}</pre><p><br></p>", "options": [{"option_name": "A", "content": "[50,100]<br>"}, {"option_name": "B", "content": "[100.100]<br>"}, {"option_name": "C", "content": "[1275,2550]<br>"}, {"option_name": "D", "content": "[2550,2550]<br>"}]}, {"answer": "B", "type": "单选", "name": "<p>写出如下代码弹出的结果:<br></p><pre class=\"brush:js;toolbar:false\">&lt;script&gt;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;m=&nbsp;1,&nbsp;j&nbsp;=&nbsp;k&nbsp;=&nbsp;0;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;add(n)&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;n&nbsp;=&nbsp;n+1;&nbsp;\r\n　&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;=&nbsp;add(m);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;add(n)&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;n&nbsp;=&nbsp;n&nbsp;+&nbsp;3;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\nz&nbsp;=&nbsp;add(m);&nbsp;\r\n&lt;/script&gt;</pre><p>&nbsp;y和z的最终结果为:<br></p>", "options": [{"option_name": "A", "content": "2,4"}, {"option_name": "B", "content": "4,4"}, {"option_name": "C", "content": "2,2"}, {"option_name": "D", "content": "报异常"}]}, {"answer": "B", "type": "单选", "name": "<p>你想通过 XMLHttpRequest更新以下元素，哪个是正确的做法？</p><p>&lt;div id=\"statusCode\"&gt;&lt;/div&gt;</p>", "options": [{"option_name": "A", "content": "var myDiv = document.getElementById (\"statusCode\"); myDiv.innerHTML = req.statusCode;"}, {"option_name": "B", "content": "var myDiv = document.getElementById (\"statusCode\"); myDiv.innerHTML = req.status;"}, {"option_name": "C", "content": "var myDiv = document.getElementById (\"statusCode\"); myDiv.setStatus (req.statusCode);"}, {"option_name": "D", "content": "var myDiv = document.getElementById (\"statusCode\"); myDiv.status = req.status;"}]}, {"answer": "AD", "type": "不定项选择", "name": "<p>下列关于操作系统进程与线程的区别正确的是：</p>", "options": [{"option_name": "A", "content": "进程是资源分配的基本单位"}, {"option_name": "B", "content": "线程是资源分配的基本单位"}, {"option_name": "C", "content": "进程是资源调度的基本单位"}, {"option_name": "D", "content": "线程是资源调度的基本单位"}]}, {"answer": "BC", "type": "不定项选择", "name": "<p>下列哪两项可以创建函数？( &nbsp; )</p>", "options": [{"option_name": "A", "content": "function=myFunction(){……..}"}, {"option_name": "B", "content": "function myFunction(){…...}"}, {"option_name": "C", "content": "myfunction = function(){…….}"}, {"option_name": "D", "content": "myFunction(){….}"}]}, {"answer": "C", "type": "单选", "name": "<p>典型的创建Windows窗口过程的流程为:( &nbsp; &nbsp;)</p>", "options": [{"option_name": "A", "content": "注册窗口类->创建窗口->更新窗口->显示窗口->消息循环"}, {"option_name": "B", "content": "创建窗口->注册窗口类->显示窗口->更新窗口->消息循环"}, {"option_name": "C", "content": "注册窗口类->创建窗口->显示窗口->更新窗口->消息循环"}, {"option_name": "D", "content": "创建窗口->注册窗口类->更新窗口->显示窗口->消息循环"}]}, {"answer": "B", "type": "单选", "name": "<p>一棵树（&gt;=3个节点）最少需要删掉几个节点才能使得这棵树不连通？</p>", "options": [{"option_name": "A", "content": "0"}, {"option_name": "B", "content": "1"}, {"option_name": "C", "content": "2"}, {"option_name": "D", "content": "3"}]}, {"answer": "A", "type": "单选", "name": "<p>在一个请求分页系统中，采用LRU页面置换算法，一个作业的页面走向为1、2、3、4、2、1、5、6、2、1、2、3、7、6、3、2、1、2、3、6。当分配给该作业的物理块数为5时，在访问过程中所发生的缺页次数为( &nbsp;)</p>", "options": [{"option_name": "A", "content": "5"}, {"option_name": "B", "content": "4"}, {"option_name": "C", "content": "3"}, {"option_name": "D", "content": "2"}]}, {"answer": "C", "type": "单选", "name": "<p>在网络7层协议中，如果想使用UDP协议达到TCP协议的效果,可以在哪层做文章?</p>", "options": [{"option_name": "A", "content": "应用层"}, {"option_name": "B", "content": "表示层"}, {"option_name": "C", "content": "会话层"}, {"option_name": "D", "content": "传输层"}, {"option_name": "E", "content": "网络层"}]}, {"answer": "B", "type": "单选", "name": "<p>路由器收到一个数据包，数据包的目标地址是202.65.17.4，该子网属于哪一个网段？</p>", "options": [{"option_name": "A", "content": "202.65.4.0/20"}, {"option_name": "B", "content": "202.65.16.0/22"}, {"option_name": "C", "content": "202.65.20.0/21"}, {"option_name": "D", "content": "无正确选项"}]}, {"answer": "C", "type": "单选", "name": "<p>在Linux系统中, 哪个文件你可以存储用于创建用户目录的系统用户默认文件？&nbsp;</p>", "options": [{"option_name": "A", "content": "/usr/tmp"}, {"option_name": "B", "content": "/etc/default"}, {"option_name": "C", "content": "/etc/skel"}, {"option_name": "D", "content": "/etc/users"}]}, {"answer": "ABD", "type": "不定项选择", "name": "<p>关于进程和线程描述正确的是( &nbsp; &nbsp;)</p>", "options": [{"option_name": "A", "content": "关于进程和线程描述正确的是()"}, {"option_name": "B", "content": "线程不拥有系统资源,但可以访问隶属于进程的资源"}, {"option_name": "C", "content": "在创建或销毁进程时,系统开销明显大于创建或销毁线程时开销"}, {"option_name": "D", "content": "进程是调度和拥有资源的基本单位"}, {"option_name": "E", "content": "不仅进程可以并发执行,同一个进程的多个线程之间也可以并发执行"}]}, {"answer": "A", "type": "单选", "name": "<p>页面有一个按钮button id为 button1，通过原生的js 设置背景色为红色？</p>", "options": [{"option_name": "A", "content": "<p>document.getElementById(\"button1\").style.backgroundColor=\"red\";</p>"}, {"option_name": "B", "content": "document.getElementById(\"button1\").style.backgroundcolor=\"red\"; "}, {"option_name": "C", "content": "document.getElementById(\"button1\").style.backGroundColor=\"red\";"}, {"option_name": "D", "content": "document.getElementById(\"button1\").style.bgcolor=\"red\"; "}]}, {"answer": "C", "type": "单选", "name": "<p>在局域网络内的某台主机用ping命令测试网络连接时发现网络内部的主机都可以连同，而不能与公网连通，问题可能是（）。</p>", "options": [{"option_name": "A", "content": "主机IP设置有误"}, {"option_name": "B", "content": "没有设置连接局域网的网关"}, {"option_name": "C", "content": "局域网的网关或主机的网关设置有误"}, {"option_name": "D", "content": "局域网DNS服务器设置有误"}]}, {"answer": "D", "type": "单选", "name": "<p>一个有n个结点的连通图的生成树是原图的最小连通子图，且包含原图中所有n个结点，并且有保持图联通的最少的边。最大生成树就是权和最大生成树，现在给出一个无向带权图的邻接矩阵，权为0表示没有边。｛{0，4，5，0，3}，{4，0，4，2，3}，{5，4，0，2，0}，{0，2，2，0，1}，{3，3，0，1，0}｝，求这个图的最大生成树的权和。</p>", "options": [{"option_name": "A", "content": "11"}, {"option_name": "B", "content": "12"}, {"option_name": "C", "content": "13"}, {"option_name": "D", "content": "14"}, {"option_name": "E", "content": "15"}]}, {"answer": "D", "type": "单选", "name": "<p>下列算法中，没有使用贪心策略的是:</p>", "options": [{"option_name": "A", "content": "Prim算法"}, {"option_name": "B", "content": "Kruskal算法"}, {"option_name": "C", "content": "Dijkstra算法"}, {"option_name": "D", "content": "KMP算法"}]}, {"answer": "D", "type": "单选", "name": "<p>多个线程可同时操作一个数据，为了保证该数据的准确性，可将操作该数据的部分改为:</p>", "options": [{"option_name": "A", "content": "只写"}, {"option_name": "B", "content": "只读"}, {"option_name": "C", "content": "异步"}, {"option_name": "D", "content": "同步"}]}, {"answer": "B", "type": "单选", "name": "<p>在linux编程中，以下哪个TCP的套接字选项与nagle算法的开启和关闭有关？</p>", "options": [{"option_name": "A", "content": "TCP_MAXSEG"}, {"option_name": "B", "content": "TCP_NODELAY"}, {"option_name": "C", "content": "TCP_SYNCNT"}, {"option_name": "D", "content": "TCP_KEEPALIVE"}]}, {"answer": "C", "type": "单选", "name": "<p>Linux文件权限一共10位长度，分成四段，第三段表示的内容是（）。</p>", "options": [{"option_name": "A", "content": "文件类型"}, {"option_name": "B", "content": "文件所有者的权限"}, {"option_name": "C", "content": "文件所有者所在组的权限"}, {"option_name": "D", "content": "其他用户的权限"}]}, {"answer": "D", "type": "单选", "name": "<p>angularjs1中定义服务哪种方法是错误的？</p>", "options": [{"option_name": "A", "content": "$provide"}, {"option_name": "B", "content": "factory"}, {"option_name": "C", "content": "service"}, {"option_name": "D", "content": "$instance"}]}], "company": "京东", "name": "京东2016校园招聘 系统工程师", "id": "149"}