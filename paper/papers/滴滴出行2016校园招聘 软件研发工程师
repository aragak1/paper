{"url": "http://exercise.acmcoder.com/comp_test?paperId=121", "content": [{"answer": "C", "type": "单选", "name": "<p>下面代码的输出结果是什么 ( &nbsp; &nbsp; &nbsp;)<br></p><pre class=\"brush:cpp;toolbar:false\">#include&nbsp;&lt;iostream&gt;using&nbsp;namespace&nbsp;std;class&nbsp;A\r\n{\tpublic:\tvoid&nbsp;virtual&nbsp;f()&nbsp;\r\n\t{\t\tcout&nbsp;&lt;&lt;&nbsp;\"A\"&nbsp;&lt;&lt;&nbsp;endl;\r\n\t}\r\n};class&nbsp;B&nbsp;:&nbsp;public&nbsp;A\r\n{\tpublic:\tvoid&nbsp;virtual&nbsp;f()\r\n\t{\t\tcout&nbsp;&lt;&lt;&nbsp;\"B\"&nbsp;&lt;&lt;&nbsp;endl;\r\n\t}\r\n};int&nbsp;main(){\r\n\tA&nbsp;*pa&nbsp;=&nbsp;new&nbsp;A();\r\n\tpa-&gt;f();\r\n\tB&nbsp;*pb=(B&nbsp;*)pa;\r\n\tpb-&gt;f();\tdelete&nbsp;pa,&nbsp;pb;\r\n\tpa=new&nbsp;B();\r\n\tpa-&gt;f();\r\n\tpb=(B&nbsp;*)pa;\r\n\tpb-&gt;f();\r\n}</pre><p><br></p>", "options": [{"option_name": "A", "content": "A A B A "}, {"option_name": "B", "content": "A B B A"}, {"option_name": "C", "content": "A A B B"}, {"option_name": "D", "content": "A A A B"}]}, {"answer": "B", "type": "单选", "name": "<p>以太网转换控制包是基于 （ &nbsp; &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "源MAC地址"}, {"option_name": "B", "content": "目的IP地址 "}, {"option_name": "C", "content": "目的MAC地址"}, {"option_name": "D", "content": "源和目的IP地址"}]}, {"answer": "C", "type": "单选", "name": "<p>声明一个指向含有10个元素的数组的指针，其中每个元素是一个函数指针，该函数的返回值是int，参数是int*，正确的是（ &nbsp; &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": " int [10]*p(int*);"}, {"option_name": "B", "content": "int ((int*)[10])*p;"}, {"option_name": "C", "content": "int (*(*p)[10])(int*);"}, {"option_name": "D", "content": "(int *p[10])(int*);"}]}, {"answer": "B", "type": "单选", "name": "<p>以下不能对二维数组a进行正确初始化的语句是（ &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;）</p>", "options": [{"option_name": "A", "content": "int a[][3] = {0, 1, 2, 3, 4, 5};"}, {"option_name": "B", "content": "int a[2][3] = {{0,1}, {2,3}, {4,5}}; "}, {"option_name": "C", "content": "int a[][3] = {{0,1},{0}};  "}, {"option_name": "D", "content": "int a[2][3] = {0}; "}]}, {"answer": "C", "type": "单选", "name": "<p>下面不属于TCP协议拥塞控制部分的是 （ &nbsp; &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "快速重传 "}, {"option_name": "B", "content": "慢启动"}, {"option_name": "C", "content": "带外数据"}, {"option_name": "D", "content": "快速恢复 "}]}, {"answer": "B", "type": "单选", "name": "<p>当很频繁的对序列中部进行插入和删除操作时，应该选择使用的容器是（ &nbsp; &nbsp; &nbsp;）</p><p><br></p>", "options": [{"option_name": "A", "content": "stack"}, {"option_name": "B", "content": "list "}, {"option_name": "C", "content": "vector"}, {"option_name": "D", "content": "deque"}]}, {"answer": "A", "type": "单选", "name": "<p>已知:print()函数是一个类的常成员函数,它无返回值,下列表示中, ( &nbsp; &nbsp; &nbsp;)是正确的&nbsp;</p>", "options": [{"option_name": "A", "content": "void print() const "}, {"option_name": "B", "content": "void const print()"}, {"option_name": "C", "content": "const void print()"}, {"option_name": "D", "content": "void print(const)"}]}, {"answer": "B", "type": "单选", "name": "<p>&nbsp;Linux中，提供TCP/IP包过滤功能的软件叫什么？ &nbsp;( &nbsp; &nbsp; &nbsp;)</p>", "options": [{"option_name": "A", "content": "route"}, {"option_name": "B", "content": "iptables"}, {"option_name": "C", "content": "rarp"}, {"option_name": "D", "content": "filter"}]}, {"answer": "C", "type": "单选", "name": "<p>下面程序的正确执行结果为( &nbsp; &nbsp; &nbsp;)<br></p><pre class=\"brush:cpp;toolbar:false\">#include&lt;iostream.h&gt;&nbsp;int&nbsp;f(int);void&nbsp;main(){&nbsp;&nbsp;&nbsp;\r\n\t\tint&nbsp;a=2,&nbsp;i;&nbsp;&nbsp;&nbsp;\r\n\t\tfor(i=0;i&lt;3;i++)&nbsp;&nbsp;\t\t\tcout&lt;&lt;f(a)&lt;&lt;\"&nbsp;\";&nbsp;&nbsp;\t\tcout&lt;&lt;endl;\r\n}int&nbsp;f(int&nbsp;a){\t\tint&nbsp;b=0;\t\tstatic&nbsp;int&nbsp;c=3;\r\n\t\tb++;\r\n\t\tc++;\t\treturn&nbsp;(a+b+c);\r\n}</pre><p><br></p>", "options": [{"option_name": "A", "content": "7 7 7"}, {"option_name": "B", "content": "7 9 11"}, {"option_name": "C", "content": "7 8 9"}, {"option_name": "D", "content": "7 10 13"}]}, {"answer": "C", "type": "单选", "name": "<p>以下哪种排序属于稳定排序 （ &nbsp; &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "希尔排序"}, {"option_name": "B", "content": "快速排序"}, {"option_name": "C", "content": "堆排序"}, {"option_name": "D", "content": "归并排序"}]}], "company": "滴滴出行", "name": "滴滴出行2016校园招聘 软件研发工程师", "id": "121"}