{"url": "http://exercise.acmcoder.com/comp_test?paperId=142", "content": [{"answer": "BCD", "type": "不定项选择", "name": "<p>F、G、X 都是32位有符号整数，F=X/2，G=X&gt;&gt;1，如果 F != G，那么：</p>", "options": [{"option_name": "A", "content": "编译错误"}, {"option_name": "B", "content": "X 是奇数"}, {"option_name": "C", "content": "X 是负数"}, {"option_name": "D", "content": "F-G=1"}, {"option_name": "E", "content": "G-F=1"}]}, {"answer": "B", "type": "单选", "name": "<p>Fill the blanks inside class definition</p><pre class=\"brush:cpp;toolbar:false\">class&nbsp;Test&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;____&nbsp;int&nbsp;a;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;____&nbsp;int&nbsp;b;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Test::Test(int&nbsp;_a,&nbsp;int&nbsp;_b)&nbsp;:&nbsp;a(_a)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;=&nbsp;_b;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n};\r\nint&nbsp;Test::b;\r\nint&nbsp;_tmain(int&nbsp;argc,&nbsp;__TCHAR&nbsp;*argv[])&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;Test&nbsp;t1(0,&nbsp;0),&nbsp;t2(1,&nbsp;1);\r\n&nbsp;&nbsp;&nbsp;&nbsp;t1.b&nbsp;=&nbsp;10;\r\n&nbsp;&nbsp;&nbsp;&nbsp;t2.b&nbsp;=&nbsp;20;\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(“%u&nbsp;%u&nbsp;%u&nbsp;%u”,&nbsp;t1.a,&nbsp;t1.b,&nbsp;t2.a,&nbsp;t2.b);\r\n}\r\nRunning&nbsp;result:&nbsp;0&nbsp;20&nbsp;1&nbsp;20</pre><p><br></p>", "options": [{"option_name": "A", "content": "static/const    const/static"}, {"option_name": "B", "content": "–/static"}, {"option_name": "C", "content": "const static/static"}, {"option_name": "D", "content": "None of the above"}]}, {"answer": "BC", "type": "不定项选择", "name": "在 C 语言中下面那个语句的结果是1？", "options": [{"option_name": "A", "content": "main 函数正常结束的返回值"}, {"option_name": "B", "content": "return 7&1;"}, {"option_name": "C", "content": "char *p=\"hello\"; return p == \"hello\";"}, {"option_name": "D", "content": "其他几项都不对"}]}, {"answer": "AC", "type": "不定项选择", "name": "<p>根据下面哪些可以确定一棵二叉树？</p>", "options": [{"option_name": "A", "content": "前序遍历和中序遍历"}, {"option_name": "B", "content": "前序遍历和后序遍历"}, {"option_name": "C", "content": "中序遍历和后序遍历"}, {"option_name": "D", "content": "后序遍历"}]}, {"answer": "ACD", "type": "不定项选择", "name": "<p>Which of the following statements are true?</p>", "options": [{"option_name": "A", "content": "We can create a binary tree from given inorder and preorder traversal sequences."}, {"option_name": "B", "content": "We can create a binary tree from given preorder and postorder traversal sequences."}, {"option_name": "C", "content": "For an almost sorted array, insertion sort can be more effective than Quicksort."}, {"option_name": "D", "content": "Suppose T(n) is the runtime of resolving a problem with n elements, T(n) = Θ(1) if n = 1; T(n) = 2T(n/2) + Θ(n) if > 1; so T(n) is Θ(n log n)."}, {"option_name": "E", "content": "None of the above."}]}, {"answer": "B", "type": "单选", "name": "<p>n 个字符构成的字符串，假设每个字符都不一样，问有多少个子串？</p>", "options": [{"option_name": "A", "content": "n+1"}, {"option_name": "B", "content": "n(n+1)/2 + 1"}, {"option_name": "C", "content": "2^n-1"}, {"option_name": "D", "content": "n!"}]}, {"answer": "D", "type": "单选", "name": "<p>给定的一个长度为N的字符串str,查找长度为P(P&lt;N)的字符串在str中的出现次数.下面的说法正确的是( &nbsp;)</p>", "options": [{"option_name": "A", "content": "不存在比最坏时间复杂度O(NP)好的算法<br>"}, {"option_name": "B", "content": "不存在比最坏时间复杂度O(N^2)好的算法<br>"}, {"option_name": "C", "content": "不存在比最坏时间复杂度O(P^2)好的算法<br>"}, {"option_name": "D", "content": "存在最坏时间复杂度为O(N+P)的算法<br>"}, {"option_name": "E", "content": "<p>存在最坏时间复杂度为O(log(N+P))的算法<br></p>"}]}, {"answer": "D", "type": "单选", "name": "<p>3*4 的方格，有多少个长方形？</p>", "options": [{"option_name": "A", "content": "18"}, {"option_name": "B", "content": "20"}, {"option_name": "C", "content": "40"}, {"option_name": "D", "content": "60"}, {"option_name": "E", "content": "上面都不对"}]}, {"answer": "D", "type": "单选", "name": "Given that the 180-degree rotated image of a 5-digit number is another 5-digit number and the difference between the numbers is 78633, what is the original 5-digit number?", "options": [{"option_name": "A", "content": "60918"}, {"option_name": "B", "content": "91086"}, {"option_name": "C", "content": "18609"}, {"option_name": "D", "content": "10968"}, {"option_name": "E", "content": "86901"}]}, {"answer": "ABCD", "type": "不定项选择", "name": "<p>N个球中有一个假冒伪劣(重量不足)，如果给你一个天平允许你测 3 次找出那个假冒伪劣，问 N 可能的值</p>", "options": [{"option_name": "A", "content": "12"}, {"option_name": "B", "content": "16"}, {"option_name": "C", "content": "20"}, {"option_name": "D", "content": "24"}, {"option_name": "E", "content": "28"}]}, {"answer": "C", "type": "单选", "name": "<p>Web 应用程序中常使用 MVC 模式，关于说法下面哪些是对的</p>", "options": [{"option_name": "A", "content": "型 ( Model )表示数据以及处理数据的业务逻辑"}, {"option_name": "B", "content": "视图 ( View ) 是对模型的(可视化)展示，它渲染模型的结果，典型的是一个用户接口元素(user interface element)"}, {"option_name": "C", "content": "控制器介于用户和系统之间，它接受用户的输入，指挥着模型和视图来完成输入对应的任务"}, {"option_name": "D", "content": "MVC 的常用实践是，模型从用户接收 GET 和 POST 的请求，然后决定做神马，通过移交给控制器和视图"}, {"option_name": "E", "content": "上面都不对"}]}, {"answer": "ABD", "type": "不定项选择", "name": "<p>Which of the following statements are true?</p>", "options": [{"option_name": "A", "content": "Insertion sort and bubble sort are not effcient for large data sets."}, {"option_name": "B", "content": "Quick sort makes O(n^2) comparisons in the worst case."}, {"option_name": "C", "content": "There is an array: 7, 6, 5, 4, 3, 2, 1. If using selection sort (ascending), the number of swap operation is 6."}, {"option_name": "D", "content": "Heap sort uses two heap operations: insertion and root deletion."}, {"option_name": "E", "content": "None of above."}]}, {"answer": "C", "type": "单选", "name": "<p>Which of following C++ code is correct?</p>", "options": [{"option_name": "A", "content": "int f() { int *a = new int(3); return *a; }"}, {"option_name": "B", "content": "int *f() { int a[3] = {1, 2, 3}; return a; }"}, {"option_name": "C", "content": "vector<int> f() {vector<int> v(3); return v; }"}, {"option_name": "D", "content": "void f(int *ret) { int a[3] = {1, 2, 3}; ret = a; return; }"}]}, {"answer": "A", "type": "单选", "name": "<p>一个直线将一个平面分成 2 部分，两条直线分成 4 部分，如果直线不平行，多条直线不共一点，问 100 条直线将平面分成几部分？</p>", "options": [{"option_name": "A", "content": "5051"}, {"option_name": "B", "content": "5053"}, {"option_name": "C", "content": "5510"}, {"option_name": "D", "content": "5511"}]}, {"answer": "ACE", "type": "不定项选择", "name": "<p>In C++, which of the following keyword(s) can be used on both a variable and a function?</p>", "options": [{"option_name": "A", "content": "static"}, {"option_name": "B", "content": "virtual"}, {"option_name": "C", "content": "extern"}, {"option_name": "D", "content": "inline"}, {"option_name": "E", "content": "const"}]}, {"answer": "AC", "type": "不定项选择", "name": "<p>Which Synchronization mechanism(s) is/are used to avoid race conditions among processes/threads in operating systems?</p>", "options": [{"option_name": "A", "content": "Mutex"}, {"option_name": "B", "content": "Mailbox"}, {"option_name": "C", "content": "Semaphore"}, {"option_name": "D", "content": "Local procedure call"}]}, {"answer": "C", "type": "单选", "name": "<p>Longest Increasing Subsequence (LIS) means a sequence containing some elements in another sequence by the same order, and the values of elements keeps increasing.For example, LIS of {2, 1, 4, 2, 3, 7, 4, 6} is {1, 2, 3, 4, 6}, and its LIS length is 5. Considering an array with N elements, what is the average time and space complexity to get the length of LIS?</p>", "options": [{"option_name": "A", "content": "Time: N^2, Space: N^2"}, {"option_name": "B", "content": "Time: N^2, Space: N"}, {"option_name": "C", "content": "Time: NlogN, Space: N"}, {"option_name": "D", "content": "Time: N, Space: N"}, {"option_name": "E", "content": "Time: N, Space: C"}]}, {"answer": "D", "type": "单选", "name": "What is the result of the following program?<pre class=\"brush:cpp;toolbar:false\">char*&nbsp;f(char&nbsp;*str,&nbsp;char&nbsp;ch)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;*it1&nbsp;=&nbsp;str;\r\n&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;*it2&nbsp;=&nbsp;str;\r\n&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(*it2&nbsp;!=&nbsp;'\\0')&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(*it2&nbsp;==&nbsp;ch)&nbsp;{&nbsp;it2++;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*it1++&nbsp;=&nbsp;*it2++;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;str;\r\n}\r\nvoid&nbsp;main(int&nbsp;argc,&nbsp;char&nbsp;*argv[])&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;*a&nbsp;=&nbsp;new&nbsp;char[10];\r\n&nbsp;&nbsp;&nbsp;&nbsp;strcpy(a,&nbsp;\"abcdcccd\");\r\n&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;f(a,&nbsp;'c');\r\n}</pre><p><br></p>", "options": [{"option_name": "A", "content": "abdcccd"}, {"option_name": "B", "content": "abdd"}, {"option_name": "C", "content": "abcc"}, {"option_name": "D", "content": "abddcccd"}, {"option_name": "E", "content": "Access Violation"}]}, {"answer": "E", "type": "单选", "name": "<p>What is the output of the following piece of C++ code?</p><pre class=\"brush:cpp;toolbar:false\">using&nbsp;namespace&nbsp;std;\r\nstruct&nbsp;Item&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;c;\r\n&nbsp;&nbsp;&nbsp;&nbsp;Item&nbsp;*next;\r\n};\r\nItem&nbsp;*Routine1(Item&nbsp;*x)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;Item&nbsp;*prev&nbsp;=&nbsp;NULL,&nbsp;*curr&nbsp;=&nbsp;x;\r\n&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(curr)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Item&nbsp;*next&nbsp;=&nbsp;curr-&gt;next;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;curr-&gt;next&nbsp;=&nbsp;prev;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prev&nbsp;=&nbsp;curr;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;curr&nbsp;=&nbsp;next;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;prev;\r\n}\r\nvoid&nbsp;Routine2(Item&nbsp;*x)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;Item&nbsp;*curr&nbsp;=&nbsp;x;\r\n&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(curr)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;curr-&gt;c&nbsp;&lt;&lt;&nbsp;”&nbsp;“;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;curr&nbsp;=&nbsp;curr-&gt;next;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\nint&nbsp;main(void)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;Item&nbsp;*x,&nbsp;d&nbsp;=&nbsp;{‘d’,&nbsp;NULL},&nbsp;c&nbsp;=&nbsp;{‘c’,&nbsp;&amp;d},&nbsp;b&nbsp;=&nbsp;{‘b’,&nbsp;&amp;c},&nbsp;a&nbsp;=&nbsp;{‘a’,&nbsp;&amp;b};\r\n&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;Routine1(&amp;a);\r\n&nbsp;&nbsp;&nbsp;&nbsp;Routine2(x);\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0;\r\n}</pre><p><br></p>", "options": [{"option_name": "A", "content": "cbad"}, {"option_name": "B", "content": "badc"}, {"option_name": "C", "content": "dbca"}, {"option_name": "D", "content": "abcd"}, {"option_name": "E", "content": "dcba"}]}, {"answer": "E", "type": "单选", "name": "<p>Assume both x and y are integers, which one of the followings returns the minimum of the two integers?</p>", "options": [{"option_name": "A", "content": "y ^ ((x ^ y) & ~(x < y))"}, {"option_name": "B", "content": "y ^(x ^ y)"}, {"option_name": "C", "content": "x ^ (x ^ y)"}, {"option_name": "D", "content": "(x ^ y) ^ (y ^ x)"}, {"option_name": "E", "content": "None of above."}]}, {"answer": "A", "type": "单选", "name": "<p>What is the result of binary number 01011001 after multiplying by 0111001 and adding 1101110?</p>", "options": [{"option_name": "A", "content": "0001 0100 0011 1111"}, {"option_name": "B", "content": "0101 0111 0111 0011"}, {"option_name": "C", "content": "0011 0100 0011 0101"}]}, {"answer": "C", "type": "单选", "name": "Suppose that a Selection Sort of 80 items has completed 32 iterations of the main loop. How many items are now guaranteed to be in their final spot (never to be moved again)?", "options": [{"option_name": "A", "content": "16"}, {"option_name": "B", "content": "31"}, {"option_name": "C", "content": "32"}, {"option_name": "D", "content": "39"}, {"option_name": "E", "content": "40"}]}, {"answer": "AD", "type": "不定项选择", "name": "<p>下面哪些是稳定排序</p>", "options": [{"option_name": "A", "content": "冒泡排序"}, {"option_name": "B", "content": "快速排序"}, {"option_name": "C", "content": "堆排序"}, {"option_name": "D", "content": "归并排序"}, {"option_name": "E", "content": "选择排序"}]}, {"answer": "A", "type": "单选", "name": "<p>Consider the following definition of a recursive function, power, that will perform exponentiation.<br></p><pre class=\"brush:cpp;toolbar:false\">int&nbsp;power(int&nbsp;b,&nbsp;int&nbsp;e)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(e&nbsp;==&nbsp;0)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(e&nbsp;%2&nbsp;==&nbsp;0)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;power&nbsp;(b&nbsp;*&nbsp;b,&nbsp;e&nbsp;/&nbsp;2);\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;b&nbsp;*&nbsp;power(b&nbsp;*&nbsp;b,&nbsp;e&nbsp;/&nbsp;2);\r\n}</pre><p>Asymptotically (渐进地) in terms of the exponent e, the number of calls to power that occur as a result of the call power(b, e) is</p>", "options": [{"option_name": "A", "content": "logarithmic<br>"}, {"option_name": "B", "content": "linear<br>"}, {"option_name": "C", "content": "quadratic<br>"}, {"option_name": "D", "content": "exponential<br>"}]}, {"answer": "ACE", "type": "不定项选择", "name": "<p>There is a sequence of n numbers 1, 2, 3,.., n and a stack which can keep m numbers at most. Push the n numbers into the stack following the sequence and pop out randomly. Suppose n is 2 and m is 3, the output sequence may be 1, 2 or 2, 1, so we get 2 different sequences. Suppose n is 7 and m is 5, please choose the output sequences of the stack:</p>", "options": [{"option_name": "A", "content": "1, 2, 3, 4, 5, 6, 7"}, {"option_name": "B", "content": "7, 6, 5, 4, 3, 2, 1"}, {"option_name": "C", "content": "5, 6, 4, 3, 7, 2, 1"}, {"option_name": "D", "content": "1, 7, 6, 5, 4, 3, 2"}, {"option_name": "E", "content": "3, 2, 1, 7, 6,5, 4"}]}], "company": "微软", "name": "微软校园招聘 研发工程师B", "id": "142"}