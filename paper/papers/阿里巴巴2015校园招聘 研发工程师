{"year": "2015", "url": "http://exercise.acmcoder.com/comp_test?paperId=87", "content": [{"answer": "BE", "type": "不定项选择", "name": "<p>下列关于线程调度的叙述中，错误的是（）。</p>", "options": [{"option_name": "A", "content": "调用线程的sleep()方法，可以使比当前线程优先级低的线程获得运行机会<br>"}, {"option_name": "B", "content": "调用线程的yeild()方法，只会使与当前线程相同优先级的线程获得运行机会<br>"}, {"option_name": "C", "content": "当有比当前线程的优先级高的线程出现时，高优先级线程将抢占CPU并运行<br>"}, {"option_name": "D", "content": "一个线程由于某些原因进入阻塞状态，会放弃CPU<br>"}, {"option_name": "E", "content": "具有相同优先级的多个线程的调度一定是分时的<br>"}, {"option_name": "F", "content": "分时调度模型是让所有线程轮流获得CPU使用权<br>"}]}, {"answer": "C", "type": "单选", "name": "<p>有两个32bit的数A、B，使用下面方式得到32bit的数C、D。哪一种可以使用C、D得到A、B的值？</p>", "options": [{"option_name": "A", "content": "C=（int32）(A+B)，D=(int32)(A-B)"}, {"option_name": "B", "content": "C=（int32）(A+B)，D=(int32)((A-B)>>1)<br>"}, {"option_name": "C", "content": "C=（int32）(A+B)，D=B<br>"}, {"option_name": "D", "content": "C=（int32）(A+B)，D=(int32)(A+2*B)<br>"}, {"option_name": "E", "content": "C=（int32）(A*B)，D=(int32)(A/B)<br>"}, {"option_name": "F", "content": "都不可以，可能溢出<br>"}]}, {"answer": "B", "type": "单选", "name": "<p>不算main这个进程自身，到底创建了多少个进程啊？<br></p><pre class=\"brush:cpp;toolbar:false\">int&nbsp;main(int&nbsp;argc,&nbsp;char*&nbsp;argv[])\r\n{\r\n&nbsp;&nbsp;&nbsp;fork();\r\n&nbsp;&nbsp;&nbsp;fork()&nbsp;&amp;&amp;&nbsp;fork()&nbsp;||&nbsp;fork();\r\n&nbsp;&nbsp;&nbsp;fork();\r\n}</pre>", "options": [{"option_name": "A", "content": "18"}, {"option_name": "B", "content": "19<br>"}, {"option_name": "C", "content": "20<br>"}, {"option_name": "D", "content": "21<br>"}]}, {"answer": "D", "type": "单选", "name": "<p><br>村长带着4对父子参加爸爸去哪儿第三季第二站某村庄的拍摄。村里为了保护小孩不被拐走有个前年的规矩，那就是吃饭时候小孩左右只能是其他小孩或自己的父母，那么4对父子在圆桌上共有多少种坐法。(旋转一下，每个人面对方向变更后算是一种新的坐法)</p>", "options": [{"option_name": "A", "content": "144<br>"}, {"option_name": "B", "content": "240<br>"}, {"option_name": "C", "content": "288<br>"}, {"option_name": "D", "content": "480<br>"}, {"option_name": "E", "content": "576<br>"}, {"option_name": "F", "content": "960"}]}, {"answer": "B", "type": "单选", "name": "<p>针对外部存储器（如磁盘）上存放的程序和数据，说法正确的是（）。</p>", "options": [{"option_name": "A", "content": "可由CPU直接进行读取写入操作"}, {"option_name": "B", "content": "须在CPU访问之前移入内存<br>"}, {"option_name": "C", "content": "必须由文件系统管理的<br>"}, {"option_name": "D", "content": "必须由进程调度程序管理<br>"}, {"option_name": "E", "content": "程序和数据必须为只读<br>"}, {"option_name": "F", "content": "程序和数据只能被一个进程独占"}]}, {"answer": "D", "type": "单选", "name": "<p>在32位操作系统中，下列类型占用8个字节的为（）。</p>", "options": [{"option_name": "A", "content": "short int"}, {"option_name": "B", "content": "int C long<br>"}, {"option_name": "C", "content": "unsigned int<br>"}, {"option_name": "D", "content": "long long<br>"}, {"option_name": "E", "content": "char<br>"}, {"option_name": "F", "content": "int<br>"}]}, {"answer": "C", "type": "单选", "name": "<p>某二维平面上有12个位置不同的点，通过连接其中任意两点，可以画出59条不同的直线。那么，在59条直线中，经过3个或3个以上的点的直线有（）条。</p>", "options": [{"option_name": "A", "content": "0<br>"}, {"option_name": "B", "content": "1<br>"}, {"option_name": "C", "content": "2<br>"}, {"option_name": "D", "content": "3<br>"}, {"option_name": "E", "content": "5<br>"}, {"option_name": "F", "content": "7<br>"}]}, {"answer": "B", "type": "单选", "name": "<p>已知一个二叉树的前序遍历结果是（ACDEFHGB） ，中序遍历结果是（DECAHFBG）,请问后续遍历结果是（）</p>", "options": [{"option_name": "A", "content": "HGFEDCBA<br>"}, {"option_name": "B", "content": "EDCHBGFA<br>"}, {"option_name": "C", "content": "BGFHEDCA<br>"}, {"option_name": "D", "content": "EDCBGHFA<br>"}, {"option_name": "E", "content": "BEGHDFCA<br>"}, {"option_name": "F", "content": "BGHFEDCA<br>"}]}, {"answer": "下单逻辑就不写了，感觉有点麻烦。主要回答后面的三个问题。<br><br>数据库表结构如何设计，有哪些表，分别有什么作用？<br>答案：三个表，分别是： <br>用户信息表，有字段：id（用户编号），name（用户名），point（现有积分），box_num（拥有魔盒个数） <br>魔盒信息表，有字段：all_num（所有魔盒个数），remain_num（剩余魔盒个数） <br>订单表，有字段：id（订单编号），user_id（用户 id），order_time（下单时间）<br><br>下单过程中哪些地方可能成为瓶颈？如何解决或改善？<br>答案：所有的用户下单的时候需要对魔盒信息表进行写入，需要对其进行加锁，这是瓶颈。改善方法：可以把魔盒信息表划分为多个表（如 10 个），每个表的魔盒个数平分（如每个表 5 万个），然后访问表的时候进行负载均衡，如用用户的 IP 计算出一个数，然后进行 mod10 运算，决定分配到哪个表中。但是这种情况下，如果一个表中的魔盒分配完了，就需要记录其为不可用，下次负载均衡的时候，就需要对其进行考虑。<br><br>是否会用到数据库事务，哪些地方会用到？如果不用数据库事务，如何保证数据的一致性？<br>答案：会用到数据库事务，用户下单的时候，需要对用户现有积分，拥有魔盒个数，剩余魔盒个数这些字段进行修改，另外，还要在订单表中添加一条新的记录，所有这些都包含在一个事务中。", "type": "问答", "name": "<p>天猫双十一有个积分换墨盒的活动，总共有50万台天猫魔盒（box），每个用户（user）可以用99个天猫积分（point）兑换一台魔盒，且每人限换一台。 请设计一套java接口并实现下单（order）逻辑。 参考（但不局限于）下面的下单逻辑： <br>1、创建订单 &nbsp;<br>2、扣减用户积分 <br>3、扣减魔盒库存 <br>4、下单成功 <br>同时请回答： &nbsp;<br>1、数据库表结构如何设计，有哪些表，分别有什么作用？ <br>2、下单过程中哪些地方可能成为瓶颈？如何解决或改善？ &nbsp;<br>3、是否会用到数据库事务，哪些地方会用到？如果不用数据库事务，如何保证数据的一致性？</p>"}, {"answer": "D", "type": "单选", "name": "<p>在一个单链表中，q的前一个节点为p，删除q所指向节点，则执行（）。</p>", "options": [{"option_name": "A", "content": "delete q<br>"}, {"option_name": "B", "content": "q->next=p->next;delete p;<br>"}, {"option_name": "C", "content": "p->next=q->next;delete p;<br>"}, {"option_name": "D", "content": "p->next=q->next;delete q;<br>"}, {"option_name": "E", "content": "delete p;<br>"}, {"option_name": "F", "content": "q->next=p->next;delete q<br>"}]}, {"answer": "D", "type": "单选", "name": "<p>并发进程执行的相对速度是（）。</p>", "options": [{"option_name": "A", "content": "由进程的程序结构决定<br>"}, {"option_name": "B", "content": "由进程本身来控制<br>"}, {"option_name": "C", "content": "进程被创建时决定<br>"}, {"option_name": "D", "content": "与进程度策略有关<br>"}, {"option_name": "E", "content": "与进程销毁时间有关<br>"}, {"option_name": "F", "content": "由内存分配策略决定<br>"}]}, {"answer": "<p>主要用到重定向的方法<br>1.HTTP重定向<br>增加N台内部服务器，组成一个局域网，将APP复制N份放到内部服务器中，原来的服务器作为与因特网通信的接口。当原服务器收到客户端请求后，服务器选择一个负载最小的内部服务器，将客户端的请求重定向到该服务器<br>2.DNS重定向<br>原服务器IP对应的域名解析到多个IP，用DNS轮转法选择合适的IP<br>3.IP地址转发<br>另外还可以进行代理的重定向<br></p>", "type": "问答", "name": "<p>A公司打算搭建一个Android App下载的Web站点，计划将目前常见的手机APP都放到这个网站上提供下载。因为业务开展初期下载量很小，技术部门就用了1台服务器，给服务器配置了一个公网IP对外进行服务。随着销售部门的推广到位，用户量和下载量呈指数级上载，要求技术部门马上进行改造。如果你是技术部门经理，你会怎么改造这个站点，以满足高负载的需求。<br>提示：短时间修改网站的代码不现实，其他方面的各种改造建议都可以，建议越多越好</p>"}, {"answer": "B", "type": "单选", "name": "<p>下列不属于hash碰撞解决方法的是（）。</p>", "options": [{"option_name": "A", "content": "线性探测<br>"}, {"option_name": "B", "content": "单旋转法<br>"}, {"option_name": "C", "content": "二次探测<br>"}, {"option_name": "D", "content": "拉链法<br>"}, {"option_name": "E", "content": "双重散列<br>"}, {"option_name": "F", "content": "多重散列<br>"}]}, {"answer": "D", "type": "单选", "name": "<p>某航空公司有M个城市之间的全连通运营线路，最近业务扩张，新增了N（&gt;1)个城市。为了保持其全连通运营的特色，公司新增了58种单程票（往与返各算一种单程票，没有联程票）；那么扩张后，该航空公司有（）个城市间的运营能力。</p>", "options": [{"option_name": "A", "content": "13<br>"}, {"option_name": "B", "content": "14<br>"}, {"option_name": "C", "content": "15<br>"}, {"option_name": "D", "content": "16<br>"}, {"option_name": "E", "content": "17<br>"}, {"option_name": "F", "content": "18<br>"}]}, {"answer": "D", "type": "单选", "name": "<p>在一个童话世界里，任意两个人之间要么是朋友关系，要么是敌人关系，不存在其他关系及没有关系的情况。并且，如果A和B是朋友关系，B和C是朋友关系，那么A和C必然是朋友关系。那么关于这个童话世界中的人群的说法错误的是：______？</p>", "options": [{"option_name": "A", "content": "可能只有1个人群，这个人群内部是朋友关系。<br>"}, {"option_name": "B", "content": "可能有2个人群，人群内部是朋友关系，人群之间是敌人关系。<br>"}, {"option_name": "C", "content": "可能有3个及以上个人群，人群内部是朋友关系，人群之间是敌人关系。<br>"}, {"option_name": "D", "content": "如果存在多个人群，并且人群内部是朋友关系，人群之间是敌人关系，那么这些人群必然是差不多大小的。<br>"}]}, {"answer": "E", "type": "单选", "name": "<p>关于引用以下说法错误的是（）。</p>", "options": [{"option_name": "A", "content": "引用必须初始化，指针不必<br>"}, {"option_name": "B", "content": "引用初始化以后不能被改变，指针可以改变所指的对象<br>"}, {"option_name": "C", "content": "不存在指向空值的引用，但是存在指向空值的指针<br>"}, {"option_name": "D", "content": "一个引用可以看作是某个变量的一个“别名”<br>"}, {"option_name": "E", "content": "引用传值，指针传地址"}, {"option_name": "F", "content": "函数参数可以声明为引用或指针类型<br>"}]}, {"answer": "D", "type": "单选", "name": "<p>下面的函数哪个是系统调用而不是库函数( &nbsp;)？</p>", "options": [{"option_name": "A", "content": "printf<br>"}, {"option_name": "B", "content": "scanf<br>"}, {"option_name": "C", "content": "fgetc<br>"}, {"option_name": "D", "content": "read<br>"}, {"option_name": "E", "content": "print_s<br>"}, {"option_name": "F", "content": "scan_s<br>"}]}, {"answer": "A", "type": "单选", "name": "<p>一条很长的河，河水的流速是1m/s，一个皮划艇逆流滑行的速度是2m/s。某一刻皮划艇运动员发现丢失了一只漂流瓶，然后调头顺流以相同的节奏划船，经过半小时后发现了漂流瓶。请问船调头时距离漂流瓶多远（）？</p>", "options": [{"option_name": "A", "content": "5400m"}, {"option_name": "B", "content": "3600m<br>"}, {"option_name": "C", "content": "7200m<br>"}, {"option_name": "D", "content": "1800m<br>"}, {"option_name": "E", "content": "9000m<br>"}, {"option_name": "F", "content": "无法判断<br>"}]}], "company": "阿里巴巴", "name": "阿里巴巴2015校园招聘 研发工程师", "id": "87"}