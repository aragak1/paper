{"url": "http://exercise.acmcoder.com/comp_test?paperId=152", "content": [{"answer": "BE", "type": "不定项选择", "name": "<p>下列关于线程调度的叙述中，错误的是（）。</p>", "options": [{"option_name": "A", "content": "调用线程的sleep()方法，可以使比当前线程优先级低的线程获得运行机会<br>"}, {"option_name": "B", "content": "调用线程的yeild()方法，只会使与当前线程相同优先级的线程获得运行机会<br>"}, {"option_name": "C", "content": "当有比当前线程的优先级高的线程出现时，高优先级线程将抢占CPU并运行<br>"}, {"option_name": "D", "content": "一个线程由于某些原因进入阻塞状态，会放弃CPU<br>"}, {"option_name": "E", "content": "具有相同优先级的多个线程的调度一定是分时的<br>"}, {"option_name": "F", "content": "分时调度模型是让所有线程轮流获得CPU使用权<br>"}]}, {"answer": "A", "type": "不定项选择", "name": "<p>下列定义语句中，错误的是</p>", "options": [{"option_name": "A", "content": "int px*；"}, {"option_name": "B", "content": "char*acp[10]；"}, {"option_name": "C", "content": "char（*pac）[10]；"}, {"option_name": "D", "content": "int（*p）（）；"}]}, {"answer": "A", "type": "单选", "name": "<p>以下描述正确的是（&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ）</p>", "options": [{"option_name": "A", "content": "命令 mknod pipe0 p创建管道，就是创建了一个名为pipe0，类型为p的文件"}, {"option_name": "B", "content": "根文件系统和子文件系统的文件系统格式必须是相同的"}, {"option_name": "C", "content": "目录若无写权限，则目录下所有文件禁止写"}, {"option_name": "D", "content": "pipe创建的管道的缺点是只限于同祖先进程间通信"}]}, {"answer": "BCD", "type": "不定项选择", "name": "<p>下列说法错误的有（ ）</p>", "options": [{"option_name": "A", "content": "数组是一种对象"}, {"option_name": "B", "content": "数组属于一种原生类"}, {"option_name": "C", "content": "int number[]={31,23,33,43,35,63}"}, {"option_name": "D", "content": "数组的大小可以任意改变"}]}, {"answer": "D", "type": "单选", "name": "<p>关于mysql_fetch_object说法中，正确的是（&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ）</p>", "options": [{"option_name": "A", "content": "mysql_fetch_object和mysql_fetch_array一样，没什么区别"}, {"option_name": "B", "content": "mysql_fetch_object返回值是个对象，所以在速度上比mysql_fetch_array要慢"}, {"option_name": "C", "content": "mysql_fetch_object返回值是个数组，所以在速度上和mysql_fetch_array及mysql_fetch_row差不多"}, {"option_name": "D", "content": "mysql_tetch_object返回值是个对象，在速度上和mysql_fetch_array及mysql_fetch_row差不多"}]}, {"answer": "BD", "type": "不定项选择", "name": "<p></p><p>小明设计了如下的学籍管理系统：</p><p>已知关系：学籍(学号，学生姓名) PK=学号</p><p>成绩（科目号，成绩，学号） PK=科目代码，FK=学号</p><p>已有表记录如下，请给出能够插入的成绩记录</p><p><img src=\"http://bj.bcebos.com/v1/acmcoder/2022437273258741.png?authorization=bce-auth-v1%2F02fe1db0eea94e8480054b43acd6124f%2F2016-06-10T11%3A06%3A37Z%2F-1%2F%2Fdee80eb305d88dabb5d6385f76e9352cec5c71aa64c7f2b2fa361de04070311d\" title=\"\" alt=\"\"><br></p>", "options": [{"option_name": "A", "content": "(1，99，2)"}, {"option_name": "B", "content": "(5，68，1)"}, {"option_name": "C", "content": "(3，70，3)"}, {"option_name": "D", "content": "(7，45，null)"}]}, {"answer": "B", "type": "不定项选择", "name": "<p>路由器转发数据包到非直接网段的过程中，依靠下列哪一个选项来寻找下一跳地址( )</p>", "options": [{"option_name": "A", "content": "帧头"}, {"option_name": "B", "content": "IP报文头部"}, {"option_name": "C", "content": "SSAP子段"}, {"option_name": "D", "content": "DSAP子段"}]}, {"answer": "BCD", "type": "不定项选择", "name": "<p>Which of the following statement(s) equal(s) value 1 in C programming language?</p>", "options": [{"option_name": "A", "content": "the return value of main function if program ends normally"}, {"option_name": "B", "content": "return (7&1)"}, {"option_name": "C", "content": "char *str=\"microsoft\"; return str==\"microsoft\""}, {"option_name": "D", "content": "return \"microsoft\"==\"microsoft\""}, {"option_name": "E", "content": "None of the above"}]}, {"answer": "C", "type": "单选", "name": "<p>关系模式R（a，b，c，d）中关系代数表达式σ3&lt;‘4’（R）等价于SQL语句（ &nbsp; &nbsp; &nbsp;）</p>", "options": [{"option_name": "A", "content": "select * from R where d<3"}, {"option_name": "B", "content": "select * from R where "}, {"option_name": "C", "content": "select c from R where c<4"}, {"option_name": "D", "content": "select c,d from R having d<2"}]}, {"answer": "B", "type": "单选", "name": "<p>下面对category描述不正确的是（）</p>", "options": [{"option_name": "A", "content": "category可以添加新的方法"}, {"option_name": "B", "content": "category可以删除修改之前的方法"}, {"option_name": "C", "content": "将类的实现分散到多个不同文件或多个不同框架中"}, {"option_name": "D", "content": "创建对私有方法的前向引用"}]}, {"answer": "ACE", "type": "不定项选择", "name": "<p>In C++, which of the following keyword(s) can be used on both a variable and a function?</p>", "options": [{"option_name": "A", "content": "static"}, {"option_name": "B", "content": "virtual"}, {"option_name": "C", "content": "extern"}, {"option_name": "D", "content": "inline"}, {"option_name": "E", "content": "const"}]}, {"answer": "ACD", "type": "不定项选择", "name": "<p>以下哪些不是链表的特征？</p>", "options": [{"option_name": "A", "content": "数据在内存中一定是连续的"}, {"option_name": "B", "content": "插入或删除时，无需移动其他元素"}, {"option_name": "C", "content": "可以随机访问表内的元素"}, {"option_name": "D", "content": "需要事先估计存储空间"}]}, {"answer": "D", "type": "单选", "name": "<p>强制卸载已安装软件需要的参数（&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ）</p>", "options": [{"option_name": "A", "content": "rpm -o --nodeps"}, {"option_name": "B", "content": "rpm -I --oldpack"}, {"option_name": "C", "content": "rpm -u --nodeps"}, {"option_name": "D", "content": "rpm -e --nodeps"}]}, {"answer": "B", "type": "单选", "name": "<p>关于BroadcastReceiver的说法不正确的是</p>", "options": [{"option_name": "A", "content": "是用来接收广播Intent的"}, {"option_name": "B", "content": "一个广播Intent只能被一个订阅了此广播的BroadcastReceiver所接收"}, {"option_name": "C", "content": "对有序广播，系统会根据接收者声明的优先级别按顺序逐个执行接收者"}, {"option_name": "D", "content": "接收者声明的优先级别在< intent-filter ><intent-filter>的android:priority属性中声明，数值越大优先级别越高</intent-filter>"}]}, {"answer": "D", "type": "不定项选择", "name": "<p>IPv6地址占____个字节</p>", "options": [{"option_name": "A", "content": "4"}, {"option_name": "B", "content": "6"}, {"option_name": "C", "content": "8"}, {"option_name": "D", "content": "16"}]}, {"answer": "C", "type": "不定项选择", "name": "<p>抽象基类是指（ ）</p>", "options": [{"option_name": "A", "content": "嵌套类"}, {"option_name": "B", "content": "派生类"}, {"option_name": "C", "content": "含有纯虚函数"}, {"option_name": "D", "content": "多继承类"}]}, {"answer": "A", "type": "不定项选择", "name": "<p>用来检查到一台主机的网络层是否连通命令是（ ）？</p>", "options": [{"option_name": "A", "content": "PING"}, {"option_name": "B", "content": "TRACERT"}, {"option_name": "C", "content": "TELNET"}, {"option_name": "D", "content": "IPCONFIG"}]}, {"answer": "A", "type": "单选", "name": "<p>关于 Handler 的说法话正确的是(）</p>", "options": [{"option_name": "A", "content": "它实现不同线程间通信的一种机制"}, {"option_name": "B", "content": "它避免了新线程操作 UI 组件"}, {"option_name": "C", "content": "它采用栈的方式来组织任务的"}, {"option_name": "D", "content": "它可以属于一个新的线程"}]}, {"answer": "AC", "type": "不定项选择", "name": "<p>下列的模板说明中，正确的有（ ）</p>", "options": [{"option_name": "A", "content": "template  < typename T1, typename T2 ><typename typename=\"\" t2=\"\"><typename typename=\"\" t2=\"\"></typename></typename>"}, {"option_name": "B", "content": "template  < class T1, T2 > <class t2=\"\"><class t2=\"\"></class></class>"}, {"option_name": "C", "content": "template  < class T1, class T2 > <class class=\"\" t2=\"\"><class class=\"\" t2=\"\"></class></class>"}, {"option_name": "D", "content": "template  < typename T1; typename T2 > <typename typename=\"\" t2=\"\"><typename typename=\"\" t2=\"\"></typename></typename>"}]}, {"answer": "AC", "type": "不定项选择", "name": "<p>Which Synchronization mechanism(s) is/are used to avoid race conditions among processes/threads in operating systems?</p>", "options": [{"option_name": "A", "content": "Mutex"}, {"option_name": "B", "content": "Mailbox"}, {"option_name": "C", "content": "Semaphore"}, {"option_name": "D", "content": "Local procedure call"}]}, {"answer": "ABE", "type": "不定项选择", "name": "<p>下面哪些机制可以用于进程间通信？</p>", "options": [{"option_name": "A", "content": "Socket"}, {"option_name": "B", "content": "Named pipe"}, {"option_name": "C", "content": "Named event"}, {"option_name": "D", "content": "Critical Section"}, {"option_name": "E", "content": "Shared memory"}, {"option_name": "F", "content": "Virtual memory"}]}, {"answer": "AD", "type": "不定项选择", "name": "<p>下列选项哪些是正确的</p>", "options": [{"option_name": "A", "content": "对于unordered_map和map这两个容器，迭代器的有效性皆不受删除操作影响"}, {"option_name": "B", "content": "对于unordered_map和map这两个容器，迭代器的有效性皆不受插入操作影响"}, {"option_name": "C", "content": "为了保证代码的异常安全性，应该避免在构造函数中抛异常"}, {"option_name": "D", "content": "为了保证代码的异常安全性，应该避免在析构函数中抛异常"}]}, {"answer": "ACD", "type": "不定项选择", "name": "<p>关于多线程和多进程编程，下面描述正确的是（）：</p>", "options": [{"option_name": "A", "content": "多进程里，子进程可获得父进程的所有堆和栈的数据；而线程会与同进程的其他线程共享数据，拥有自己的栈空间"}, {"option_name": "B", "content": "线程因为有自己的独立栈空间且共享数据，所有执行的开销相对较大，同时不利于资源管理和保护"}, {"option_name": "C", "content": "线程的通信速度更快，切换更快，因为他们在同一地址空间内"}, {"option_name": "D", "content": "线程使用公共变量/内存时需要使用同步机制，因为他们在同一地址空间内"}, {"option_name": "E", "content": "因多线程里，每个子进程有自己的地址空间，因此相互之间通信时，线程不如进程灵活和方便"}]}, {"answer": "BD", "type": "不定项选择", "name": "<p>选项中哪些是SQL的DML语句？</p>", "options": [{"option_name": "A", "content": "select"}, {"option_name": "B", "content": "insert"}, {"option_name": "C", "content": "alter"}, {"option_name": "D", "content": "delete"}, {"option_name": "E", "content": "create"}]}, {"answer": "C", "type": "单选", "name": "<p>NSRunLoop的以下描述错误的是（）</p>", "options": [{"option_name": "A", "content": "Runloop并不是由系统自动控制的"}, {"option_name": "B", "content": "有3类对象可以被run loop监控：sources，timers，observers"}, {"option_name": "C", "content": "线程是默认启动run loop的"}, {"option_name": "D", "content": "NSTimer可手动添加到新建的NSRunLoop中"}]}, {"answer": "BD", "type": "不定项选择", "name": "<p>Which statement(s) is(are) correct about thread and process？Select all that apply.</p>", "options": [{"option_name": "A", "content": "Threads share the same address space of the parent process;Processes share the same address space of the parent process."}, {"option_name": "B", "content": "Changes to the main thread(cancellation，priority change，etc.) may affect the behavior of the other threads of the process;"}, {"option_name": "C", "content": "Changes to the parent process does not affect child processes.  Multiple threads mar cause deadlock,while multiple processes won"}, {"option_name": "D", "content": "Threads can directly communicate with other threads of its process;Processes must use inter-process communication to communicate with sibling processes."}, {"option_name": "E", "content": "None of the above."}]}, {"answer": "A", "type": "单选", "name": "<p>下面关于类定义的说法中，正确的是:</p>", "options": [{"option_name": "A", "content": "类定义中包括数据成员和函数成员的声明"}, {"option_name": "B", "content": "类成员的缺省访问权限是保护的"}, {"option_name": "C", "content": "数据成员必须被声明为私有的"}, {"option_name": "D", "content": "成员函数只能在类体外进行定义"}]}, {"answer": "B", "type": "单选", "name": "<p>要在session对象中保存属性，可以使用以下哪个语句( &nbsp; &nbsp; &nbsp;)</p>", "options": [{"option_name": "A", "content": "session.getAttribute(“key”，”value”)"}, {"option_name": "B", "content": "session.setAttribute(“key”，”value”)"}, {"option_name": "C", "content": "session.setAttribute(“key”)"}, {"option_name": "D", "content": "session.getAttribute(“key”)"}]}, {"answer": "ACE", "type": "不定项选择", "name": "<p>There is a sequence of n numbers 1, 2, 3,.., n and a stack which can keep m numbers at most. Push the n numbers into the stack following the sequence and pop out randomly. Suppose n is 2 and m is 3, the output sequence may be 1, 2 or 2, 1, so we get 2 different sequences. Suppose n is 7 and m is 5, please choose the output sequences of the stack:</p>", "options": [{"option_name": "A", "content": "1, 2, 3, 4, 5, 6, 7"}, {"option_name": "B", "content": "7, 6, 5, 4, 3, 2, 1"}, {"option_name": "C", "content": "5, 6, 4, 3, 7, 2, 1"}, {"option_name": "D", "content": "1, 7, 6, 5, 4, 3, 2"}, {"option_name": "E", "content": "3, 2, 1, 7, 6,5, 4"}]}, {"answer": "ABCD", "type": "不定项选择", "name": "<p>基于哈希的索引和基于树的索引有什么区别?</p>", "options": [{"option_name": "A", "content": "hash索引仅满足“=”、“IN”和“<=>”查询，不能使用范围查询"}, {"option_name": "B", "content": "hash索引无法被用来进行数据的排序操作"}, {"option_name": "C", "content": "对于组合索引，Hash 索引在计算 Hash 值的时候是组合索引键合并后再一起计算 Hash 值，而不是单独计算 Hash 值，所以通过组合索引的前面一个或几个索引键进行查询的时候，Hash 索引也无法被利用"}, {"option_name": "D", "content": "Hash 索引遇到大量Hash值相等的情况后性能并不一定就会比B-Tree索引高"}]}], "company": "百度", "name": "百度2016校园招聘 移动软件研发工程师", "id": "152"}